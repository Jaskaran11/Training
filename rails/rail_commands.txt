

itsacheckmate@itscheckmate:~$ cd Training
itsacheckmate@itscheckmate:~/Training$ mkdir rails
itsacheckmate@itscheckmate:~/Training$ cd rails
itsacheckmate@itscheckmate:~/Training/rails$ rails new -d attendance_management_system
No value provided for required arguments 'app_path'
itsacheckmate@itscheckmate:~/Training/rails$ rails new  attendance_management_system -d postgresql
      create  
      create  README.md
      create  Rakefile
      create  .ruby-version
      create  config.ru
      create  .gitignore
      create  .gitattributes
      create  Gemfile
         run  git init from "."
Initialized empty Git repository in /home/itsacheckmate/Training/rails/attendance_management_system/.git/
      create  app
      create  app/assets/config/manifest.js
      create  app/assets/stylesheets/application.css
      create  app/channels/application_cable/channel.rb
      create  app/channels/application_cable/connection.rb
      create  app/controllers/application_controller.rb
      create  app/helpers/application_helper.rb
      create  app/jobs/application_job.rb
      create  app/mailers/application_mailer.rb
      create  app/models/application_record.rb
      create  app/views/layouts/application.html.erb
      create  app/views/layouts/mailer.html.erb
      create  app/views/layouts/mailer.text.erb
      create  app/assets/images
      create  app/assets/images/.keep
      create  app/controllers/concerns/.keep
      create  app/models/concerns/.keep
      create  bin
      create  bin/rails
      create  bin/rake
      create  bin/setup
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
      create  config/cable.yml
      create  config/puma.rb
      create  config/storage.yml
      create  config/environments
      create  config/environments/development.rb
      create  config/environments/production.rb
      create  config/environments/test.rb
      create  config/initializers
      create  config/initializers/assets.rb
      create  config/initializers/content_security_policy.rb
      create  config/initializers/cors.rb
      create  config/initializers/filter_parameter_logging.rb
      create  config/initializers/inflections.rb
      create  config/initializers/new_framework_defaults_7_0.rb
      create  config/initializers/permissions_policy.rb
      create  config/locales
      create  config/locales/en.yml
      create  config/master.key
      append  .gitignore
      create  config/boot.rb
      create  config/database.yml
      create  db
      create  db/seeds.rb
      create  lib
      create  lib/tasks
      create  lib/tasks/.keep
      create  lib/assets
      create  lib/assets/.keep
      create  log
      create  log/.keep
      create  public
      create  public/404.html
      create  public/422.html
      create  public/500.html
      create  public/apple-touch-icon-precomposed.png
      create  public/apple-touch-icon.png
      create  public/favicon.ico
      create  public/robots.txt
      create  tmp
      create  tmp/.keep
      create  tmp/pids
      create  tmp/pids/.keep
      create  tmp/cache
      create  tmp/cache/assets
      create  vendor
      create  vendor/.keep
      create  test/fixtures/files
      create  test/fixtures/files/.keep
      create  test/controllers
      create  test/controllers/.keep
      create  test/mailers
      create  test/mailers/.keep
      create  test/models
      create  test/models/.keep
      create  test/helpers
      create  test/helpers/.keep
      create  test/integration
      create  test/integration/.keep
      create  test/channels/application_cable/connection_test.rb
      create  test/test_helper.rb
      create  test/system
      create  test/system/.keep
      create  test/application_system_test_case.rb
      create  storage
      create  storage/.keep
      create  tmp/storage
      create  tmp/storage/.keep
      remove  config/initializers/cors.rb
      remove  config/initializers/new_framework_defaults_7_0.rb
         run  bundle install
Fetching gem metadata from https://rubygems.org/...........
Fetching gem metadata from https://rubygems.org/.
Resolving dependencies...
Using rake 13.0.6
Using concurrent-ruby 1.1.10
Using websocket-extensions 0.1.5
Using marcel 1.0.2
Using erubi 1.10.0
Using digest 3.1.0
Using timeout 0.2.0
Using strscan 3.0.3
Using public_suffix 4.0.7
Using minitest 5.15.0
Using bindex 0.8.1
Using bundler 2.2.3
Using matrix 0.4.2
Using regexp_parser 2.4.0
Using childprocess 4.1.0
Using io-console 0.5.11
Using method_source 1.0.0
Using thor 1.2.1
Using zeitwerk 2.5.4
Using pg 1.3.5
Using rexml 3.2.5
Using rubyzip 2.3.2
Using i18n 1.10.0
Using nio4r 2.5.8
Using websocket-driver 0.7.5
Using net-protocol 0.1.3
Using addressable 2.8.0
Using reline 0.3.1
Using crass 1.0.6
Using puma 5.6.4
Using net-imap 0.2.3
Using net-pop 0.1.1
Using builder 3.2.4
Using irb 1.4.1
Using selenium-webdriver 4.1.0
Using debug 1.5.0
Using tzinfo 2.0.4
Using msgpack 1.5.1
Using activesupport 7.0.3
Using net-smtp 0.3.1
Using bootsnap 1.11.1
Using racc 1.6.0
Using rack 2.2.3
Using mini_mime 1.1.2
Using rack-test 1.1.0
Using globalid 1.0.0
Using activemodel 7.0.3
Using activejob 7.0.3
Using activerecord 7.0.3
Using mail 2.7.1
Using sprockets 4.0.3
Using nokogiri 1.13.6 (x86_64-linux)
Using rails-dom-testing 2.0.3
Using loofah 2.18.0
Using xpath 3.2.0
Using rails-html-sanitizer 1.4.2
Using webdrivers 5.0.0
Using actionview 7.0.3
Using capybara 3.37.1
Using actionpack 7.0.3
Using jbuilder 2.11.5
Using actioncable 7.0.3
Using activestorage 7.0.3
Using actionmailer 7.0.3
Using actionmailbox 7.0.3
Using railties 7.0.3
Using actiontext 7.0.3
Using sprockets-rails 3.4.2
Using rails 7.0.3
Using stimulus-rails 1.0.4
Using turbo-rails 1.0.1
Using web-console 4.2.0
Using importmap-rails 1.0.3
Bundle complete! 15 Gemfile dependencies, 73 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
         run  bundle binstubs bundler
       rails  importmap:install
Add Importmap include tags in application layout
      insert  app/views/layouts/application.html.erb
Create application.js module as entrypoint
      create  app/javascript/application.js
Use vendor/javascript for downloaded pins
      create  vendor/javascript
      create  vendor/javascript/.keep
Ensure JavaScript files are in the Sprocket manifest
      append  app/assets/config/manifest.js
Configure importmap paths in config/importmap.rb
      create  config/importmap.rb
Copying binstub
      create  bin/importmap
       rails  turbo:install stimulus:install
Import Turbo
      append  app/javascript/application.js
Pin Turbo
      append  config/importmap.rb
Run turbo:install:redis to switch on Redis and use it in development for turbo streams
Create controllers directory
      create  app/javascript/controllers
      create  app/javascript/controllers/index.js
      create  app/javascript/controllers/application.js
      create  app/javascript/controllers/hello_controller.js
Import Stimulus controllers
      append  app/javascript/application.js
Pin Stimulus
Appending: pin "@hotwired/stimulus", to: "stimulus.min.js", preload: true"
      append  config/importmap.rb
Appending: pin "@hotwired/stimulus-loading", to: "stimulus-loading.js", preload: true
      append  config/importmap.rb
Pin all controllers
Appending: pin_all_from "app/javascript/controllers", under: "controllers"
      append  config/importmap.rb
itsacheckmate@itscheckmate:~/Training/rails$ ls
attendance_management_system
itsacheckmate@itscheckmate:~/Training/rails$ cd attendance_management_system/
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rake db:create
Created database 'attendance_management_system_development'
Created database 'attendance_management_system_test'
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ ls
app  bin  config  config.ru  db  Gemfile  Gemfile.lock  lib  log  public  Rakefile  README.md  storage  test  tmp  vendor
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ ls
app  bin  config  config.ru  db  Gemfile  Gemfile.lock  lib  log  public  Rakefile  README.md  storage  test  tmp  vendor
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails generate model employee
      invoke  active_record
      create    db/migrate/20220520112843_create_employees.rb
      create    app/models/employee.rb
      invoke    test_unit
      create      test/models/employee_test.rb
      create      test/fixtures/employees.yml
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails generate model department
      invoke  active_record
      create    db/migrate/20220520112851_create_departments.rb
      create    app/models/department.rb
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails db:migrate:status
 => "Sector 20,Chd" 
3.0.0 :008 > employee.city="Chandigarh"
 => "Chandigarh" 
3.0.0 :009 > employee.country="India"
 => "India" 
3.0.0 :010 > employee.dob="2000/04/11"
 => "2000/04/11" 
3.0.0 :011 > employee.mobile="9876573100"
 => "9876573100" 
3.0.0 :012 > employee.hire_date="2022/03/14"
 => "2022/03/14" 
3.0.0 :013 > employee
 => 
#<Employee:0x0000555a5cff71f0                                   
 id: 1,                                                         
 name: "Jaskaran",                                              
 gender: "Male",                                                
 salary: 20000,                                                 
 address: "Sector 20,Chd",                                      
 city: "Chandigarh",                                            
 country: "India",                                              
 dob: Tue, 11 Apr 2000,                                         
 mobile: "9876573100",                                          
 hire_date: Mon, 14 Mar 2022,                                   
 created_at: nil,                                               
 updated_at: nil>           
3.0.0 :014 > employee.id = 2
 => 2 
3.0.0 :015 > employee.save 
  TRANSACTION (0.4ms)  BEGIN
  Employee Create (1.2ms)  INSERT INTO "employees" ("id", "name", "gender", "salary", "address", "city", "country", "dob", "mobile", "hire_date", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"  [["id", 2], ["name", "Jaskaran"], ["gender", "Male"], ["salary", 20000], ["address", "Sector 20,Chd"], ["city", "Chandigarh"], ["country", "India"], ["dob", "2000-04-11"], ["mobile", "9876573100"], ["hire_date", "2022-03-14"], ["created_at", "2022-05-20 12:25:09.825371"], ["updated_at", "2022-05-20 12:25:09.825371"]]
  TRANSACTION (0.8ms)  COMMIT                                   
 => true                                                        
3.0.0 :016 > employee.id = 1
 => 1 
3.0.0 :017 > employee.save 
  TRANSACTION (0.2ms)  BEGIN
  Employee Update (0.8ms)  UPDATE "employees" SET "id" = $1, "updated_at" = $2 WHERE "employees"."id" = $3  [["id", 1], ["updated_at", "2022-05-20 12:25:27.319883"], ["id", 2]]
  TRANSACTION (7.1ms)  COMMIT                                   
 => true    
                                                     

itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails g migration AddNameToDepartments name:
      invoke  active_record                                     
      create    db/migrate/20220520125337_add_name_to_departments.rb
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails db:migrate
== 20220520125337 AddNameToDepartments: migrating =============================
-- add_column(:departments, :name, :string)                     
   -> 0.0021s                                                   
== 20220520125337 AddNameToDepartments: migrated (0.0021s) ====================
                                 
Product.connection.execute("UPDATE products SET price = 'free' WHERE 1=1")
tsacheckmate@itscheckmate:~/Training/rails/attendance_management_system/bin$ rails db:rollback
== 20220519145127 CreateQualifications: reverting =============================
-- drop_table(:qualifications)
   -> 0.0016s
== 20220519145127 CreateQualifications: reverted (0.0174s) ====================

------------------------------------------------------

    This generates a skeletal Rails installation in ~/Code/Ruby/weblog.
itsacheckmate@itscheckmate:~/Training/rails$ rails new hms -d postgresql
      create  
      create  README.md
      create  Rakefile
      create  .ruby-version
      create  config.ru
      create  .gitignore
      create  .gitattributes
      create  Gemfile
         run  git init from "."
Initialized empty Git repository in /home/itsacheckmate/Training/rails/hms/.git/
      create  app
      create  app/assets/config/manifest.js
      create  app/assets/stylesheets/application.css
      create  app/channels/application_cable/channel.rb
      create  app/channels/application_cable/connection.rb
      create  app/controllers/application_controller.rb
      create  app/helpers/application_helper.rb
      create  app/jobs/application_job.rb
      create  app/mailers/application_mailer.rb
      create  app/models/application_record.rb
      create  app/views/layouts/application.html.erb
      create  app/views/layouts/mailer.html.erb
      create  app/views/layouts/mailer.text.erb
      create  app/assets/images
      create  app/assets/images/.keep
      create  app/controllers/concerns/.keep
      create  app/models/concerns/.keep
      create  bin
      create  bin/rails
      create  bin/rake
      create  bin/setup
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
      create  config/cable.yml
      create  config/puma.rb
      create  config/storage.yml
      create  config/environments
      create  config/environments/development.rb
      create  config/environments/production.rb
      create  config/environments/test.rb
      create  config/initializers
      create  config/initializers/assets.rb
      create  config/initializers/content_security_policy.rb
      create  config/initializers/cors.rb
      create  config/initializers/filter_parameter_logging.rb
      create  config/initializers/inflections.rb
      create  config/initializers/new_framework_defaults_7_0.rb
      create  config/initializers/permissions_policy.rb
      create  config/locales
      create  config/locales/en.yml
      create  config/master.key
      append  .gitignore
      create  config/boot.rb
      create  config/database.yml
      create  db
      create  db/seeds.rb
      create  lib
      create  lib/tasks
      create  lib/tasks/.keep
      create  lib/assets
      create  lib/assets/.keep
      create  log
      create  log/.keep
      create  public
      create  public/404.html
      create  public/422.html
      create  public/500.html
      create  public/apple-touch-icon-precomposed.png
      create  public/apple-touch-icon.png
      create  public/favicon.ico
      create  public/robots.txt
      create  tmp
      create  tmp/.keep
      create  tmp/pids
      create  tmp/pids/.keep
      create  tmp/cache
      create  tmp/cache/assets
      create  vendor
      create  vendor/.keep
      create  test/fixtures/files
      create  test/fixtures/files/.keep
      create  test/controllers
      create  test/controllers/.keep
      create  test/mailers
      create  test/mailers/.keep
      create  test/models
      create  test/models/.keep
      create  test/helpers
      create  test/helpers/.keep
      create  test/integration
      create  test/integration/.keep
      create  test/channels/application_cable/connection_test.rb
      create  test/test_helper.rb
      create  test/system
      create  test/system/.keep
      create  test/application_system_test_case.rb
      create  storage
      create  storage/.keep
      create  tmp/storage
      create  tmp/storage/.keep
      remove  config/initializers/cors.rb
      remove  config/initializers/new_framework_defaults_7_0.rb
         run  bundle install
Fetching gem metadata from https://rubygems.org/...........
Fetching gem metadata from https://rubygems.org/.
Resolving dependencies...
Using rake 13.0.6
Using concurrent-ruby 1.1.10
Using websocket-extensions 0.1.5
Using marcel 1.0.2
Using mini_mime 1.1.2
Using racc 1.6.0
Using timeout 0.2.0
Using strscan 3.0.3
Using public_suffix 4.0.7
Using nio4r 2.5.8
Using msgpack 1.5.1
Using bundler 2.2.3
Using erubi 1.10.0
Using matrix 0.4.2
Using childprocess 4.1.0
Using io-console 0.5.11
Using bindex 0.8.1
Using thor 1.2.1
Using builder 3.2.4
Using zeitwerk 2.5.4
Using rexml 3.2.5
Using rubyzip 2.3.2
Using i18n 1.10.0
Using tzinfo 2.0.4
Using minitest 5.15.0
Using nokogiri 1.13.6 (x86_64-linux)
Using mail 2.7.1
Using net-protocol 0.1.3
Using rack 2.2.3
Using addressable 2.8.0
Using bootsnap 1.11.1
Using reline 0.3.1
Using pg 1.3.5
Using activesupport 7.0.3
Using xpath 3.2.0
Using rack-test 1.1.0
Using puma 5.6.4
Using irb 1.4.1
Using rails-dom-testing 2.0.3
Using globalid 1.0.0
Using activemodel 7.0.3
Using debug 1.5.0
Using activejob 7.0.3
Using method_source 1.0.0
Using websocket-driver 0.7.5
Using selenium-webdriver 4.1.0
Using digest 3.1.0
Using webdrivers 5.0.0
Using net-imap 0.2.3
Using net-pop 0.1.1
Using net-smtp 0.3.1
Using crass 1.0.6
Using sprockets 4.0.3
Using loofah 2.18.0
Using activerecord 7.0.3
Using regexp_parser 2.4.0
Using rails-html-sanitizer 1.4.2
Using capybara 3.37.1
Using actionview 7.0.3
Using actionpack 7.0.3
Using jbuilder 2.11.5
Using actioncable 7.0.3
Using activestorage 7.0.3
Using actionmailer 7.0.3
Using railties 7.0.3
Using sprockets-rails 3.4.2
Using actionmailbox 7.0.3
Using actiontext 7.0.3
Fetching turbo-rails 1.1.1
Using rails 7.0.3
Using stimulus-rails 1.0.4
Fetching importmap-rails 1.1.0
Using web-console 4.2.0
Installing importmap-rails 1.1.0
Installing turbo-rails 1.1.1
Bundle complete! 15 Gemfile dependencies, 73 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
         run  bundle binstubs bundler
       rails  importmap:install
Add Importmap include tags in application layout
      insert  app/views/layouts/application.html.erb
Create application.js module as entrypoint
      create  app/javascript/application.js
Use vendor/javascript for downloaded pins
      create  vendor/javascript
      create  vendor/javascript/.keep
Ensure JavaScript files are in the Sprocket manifest
      append  app/assets/config/manifest.js
Configure importmap paths in config/importmap.rb
      create  config/importmap.rb
Copying binstub
      create  bin/importmap
       rails  turbo:install stimulus:install
Import Turbo
      append  app/javascript/application.js
Pin Turbo
      append  config/importmap.rb
Run turbo:install:redis to switch on Redis and use it in development for turbo streams
Create controllers directory
      create  app/javascript/controllers
      create  app/javascript/controllers/index.js
      create  app/javascript/controllers/application.js
      create  app/javascript/controllers/hello_controller.js
Import Stimulus controllers
      append  app/javascript/application.js
Pin Stimulus
Appending: pin "@hotwired/stimulus", to: "stimulus.min.js", preload: true"
      append  config/importmap.rb
Appending: pin "@hotwired/stimulus-loading", to: "stimulus-loading.js", preload: true
      append  config/importmap.rb
Pin all controllers
Appending: pin_all_from "app/javascript/controllers", under: "controllers"
      append  config/importmap.rb
itsacheckmate@itscheckmate:~/Training/rails$ rake db:create
rake aborted!
No Rakefile found (looking for: rakefile, Rakefile, rakefile.rb, Rakefile.rb)
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/rake-13.0.6/exe/rake:27:in `<top (required)>'
(See full trace by running task with --trace)
itsacheckmate@itscheckmate:~/Training/rails$ ls
attendance_management_system  hms  rail_commands.txt
itsacheckmate@itscheckmate:~/Training/rails$ cd hms/
itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:create
Created database 'hms_development'
Created database 'hms_test'
itsacheckmate@itscheckmate:~/Training/rails/hms$ ls
app  config     db       Gemfile.lock  log     Rakefile   storage  tmp
bin  config.ru  Gemfile  lib           public  README.md  test     vendor
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails generate model customer
      invoke  active_record
      create    db/migrate/20220523084619_create_customers.rb
      create    app/models/customer.rb
      invoke    test_unit
      create      test/models/customer_test.rb
      create      test/fixtures/customers.yml
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523084619 CreateCustomers: migrating ==================================
-- create_table(:customers)
   -> 0.0032s
== 20220523084619 CreateCustomers: migrated (0.0032s) =========================

itsacheckmate@itscheckmate:~/Training/rails/hms$ cd ..

Migration types:

There are a few types of migrations:

    add_column
    add_index
    change_column
    change_table
    create_table
    drop_table
    remove_column
    remove_index
    rename_column

Supported data types:

 :binary
 :boolean
 :date
 :datetime
 :decimal
 :float
 :integer
 :primary_key
 :string
 :text
 :time
 :timestamp

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails generate model customer
      invoke  active_record
      create    db/migrate/20220523084619_create_customers.rb
      create    app/models/customer.rb
      invoke    test_unit
      create      test/models/customer_test.rb
      create      test/fixtures/customers.yml
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523084619 CreateCustomers: migrating ==================================
-- create_table(:customers)
   -> 0.0032s
== 20220523084619 CreateCustomers: migrated (0.0032s) =========================

itsacheckmate@itscheckmate:~/Training/rails/hms$ cd ..
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ itsacitsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails generate model room
      invoke  active_record
      create    db/migrate/20220523090318_create_rooms.rb
      create    app/models/room.rb
      invoke    test_unit
      create      test/models/room_test.rb
      create      test/fixtures/rooms.yml
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails db:rollback
== 20220520134955 AddYearOfPassingToQualifications: reverting =================
-- remove_column(:qualifications, :year_of_passing, :date)
   -> 0.0025s
== 20220520134955 AddYearOfPassingToQualifications: reverted (0.0099s) ========

itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ cd ..
itsacheckmate@itscheckmate:~/Training/rails$ cd hms/
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails generate model room
      invoke  active_record
      create    db/migrate/20220523090358_create_rooms.rb
      create    app/models/room.rb
      invoke    test_unit
      create      test/models/room_test.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration AddCountryToCustomers country
      invoke  active_record
      create    db/migrate/20220523091950_add_country_to_customers.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523090358 CreateRooms: migrating ======================================
-- create_table(:rooms)
   -> 0.0028s
== 20220523090358 CreateRooms: migrated (0.0028s) =============================

== 20220523091950 AddCountryToCustomers: migrating ============================
-- add_column(:customers, :country, :string)
   -> 0.0011s
== 20220523091950 AddCountryToCustomers: migrated (0.0012s) ===================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:rollback
== 20220523091950 AddCountryToCustomers: reverting ============================
-- remove_column(:customers, :country, :string)
   -> 0.0013s
== 20220523091950 AddCountryToCustomers: reverted (0.0087s) ===================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523091950 AddCountryToCustomers: migrating ============================
-- add_column(:customers, :country, :string)
   -> 0.0011s
== 20220523091950 AddCountryToCustomers: migrated (0.0011s) ===================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration AddNameToRooms name
      invoke  active_record
      create    db/migrate/20220523092421_add_name_to_rooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration AddPriceToRooms price
      invoke  active_record
      create    db/migrate/20220523092443_add_price_to_rooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523092421 AddNameToRooms: migrating ===================================
-- add_column(:rooms, :name, :string)
   -> 0.0084s
== 20220523092421 AddNameToRooms: migrated (0.0084s) ==========================

== 20220523092443 AddPriceToRooms: migrating ==================================
-- add_column(:rooms, :price, :string)
   -> 0.0008s
== 20220523092443 AddPriceToRooms: migrated (0.0009s) =========================

itsacheckmate@itscheckmate:~/Training/rails/hms$ 

created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
 updated_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
 country: nil>                
3.0.0 :004 > customer.name= "Jaskaran Singh"
 => "Jaskaran Singh" 
3.0.0 :005 > customer
 => 
#<Customer:0x00005586bc34d120                                   
 id: 1,                                                         
 name: "Jaskaran Singh",                                        
 address: nil,                                                  
 gender: nil,                                                   
 mobile: nil,                                                   
 check_in: nil,                                                 
 check_out: nil,                                                
 created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,    
 updated_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,    
 country: nil>                                                  
3.0.0 :006 > customer.address = "#Sector 20-A Chandigarh"
 => "#Sector 20-A Chandigarh" 
3.0.0 :007 > customer.gender = "Male"
 => "Male" 
3.0.0 :008 > customer.mobile = "9876573100"
 => "9876573100" 
3.0.0 :009 > customer.check_in = "2022/05/01"
 => "2022/05/01" 
3.0.0 :010 > customer.check_in
 => Sun, 01 May 2022 
3.0.0 :011 > customer.check_out = "2022/05/10"
 => "2022/05/10" 
3.0.0 :012 > customer.country = "India"
 => "India" 
3.0.0 :013 > customer.save
  TRANSACTION (0.2ms)  BEGIN
  Customer Update (0.2ms)  UPDATE "customers" SET "name" = $1, "address" = $2, "gender" = $3, "mobile" = $4, "check_in" = $5, "check_out" = $6, "updated_at" = $7, "country" = $8 WHERE "customers"."id" = $9  [["name", "Jaskaran Singh"], ["address", "#Sector 20-A Chandigarh"], ["gender", "Male"], ["mobile", "9876573100"], ["check_in", "2022-05-01"], ["check_out", "2022-05-10"], ["updated_at", "2022-05-23 10:05:42.660282"], ["country", "India"], ["id", 1]]           
  TRANSACTION (6.6ms)  COMMIT                                   
 => true        
 hms_development=# select * from customers
;
 id |      name      |         address         | gender |   mobile   |  check_in  | check_out  |         created_at         |         updated_at         | country 
----+----------------+-------------------------+--------+------------+------------+------------+----------------------------+----------------------------+---------
  1 | Jaskaran Singh | #Sector 20-A Chandigarh | Male   | 9876573100 | 2022-05-01 | 2022-05-10 | 2022-05-23 10:03:11.423908 | 2022-05-23 10:05:42.660282 | India
(1 row)

 => #<Payment:0x00005586bc7189f8 id: 1, paid: true, date: Mon, 09 May 2022, created_at: nil, updated_at: nil> 
3.0.0 :022 > payment.save 
  TRANSACTION (0.4ms)  BEGIN
  Payment Create (1.0ms)  INSERT INTO "payments" ("id", "paid", "date", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["id", 1], ["paid", true], ["date", "2022-05-09"], ["created_at", "2022-05-23 10:08:44.637445"], ["updated_at", "2022-05-23 10:08:44.637445"]]
  TRANSACTION (6.5ms)  COMMIT                                                
 => true  
 hms_development=# select * from payments;
 id | paid |    date    |         created_at         |         updated_at         
----+------+------------+----------------------------+----------------------------
  1 | t    | 2022-05-09 | 2022-05-23 10:08:44.637445 | 2022-05-23 10:08:44.637445
(1 row)

#<Reservation:0x00005586bc669250                                                  
 id: 1,                                                                           
 date: nil,                                                                       
 confirmed: nil,                                                                  
 check_in: nil,                                                                   
 check_out: nil,                                                                  
 created_at: Mon, 23 May 2022 10:10:33.949891000 UTC +00:00,
 updated_at: Mon, 23 May 2022 10:10:33.949891000 UTC +00:00> 
3.0.0 :027 > reservation.date="2022/04/31"
 => "2022/04/31" 
3.0.0 :028 > reservation.confirmed = true
 => true 
3.0.0 :029 > reservation.check_in = "2022/05/01"
 => "2022/05/01" 
3.0.0 :030 > reservation.check_out = "2022/05/10"
 => "2022/05/10" 
3.0.0 :031 > reservation.save 
  TRANSACTION (0.2ms)  BEGIN
  Reservation Update (0.3ms)  UPDATE "reservations" SET "confirmed" = $1, "check_in" = $2, "check_out" = $3, "updated_at" = $4 WHERE "reservations"."id" = $5  [["confirmed", true], ["check_in", "2022-05-01"], ["check_out", "2022-05-10"], ["updated_at", "2022-05-23 10:12:29.679111"], ["id", 1]]
  TRANSACTION (6.7ms)  COMMIT                                      
 => true        
 
 #<Reservation:0x00005586bc669250                                   
 id: 1,                                                            
 date: Sun, 01 May 2022,                                           
 confirmed: true,                                                  
 check_in: Sun, 01 May 2022,                                       
 check_out: Tue, 10 May 2022,                                      
 created_at: Mon, 23 May 2022 10:10:33.949891000 UTC +00:00,       
 updated_at: Mon, 23 May 2022 10:12:29.679111000 UTC +00:00>       
3.0.0 :035 > 

#<Reservation:0x00005586bc669250                                   
 id: 1,                                                            
 date: Sun, 01 May 2022,                                           
 confirmed: true,                                                  
 check_in: Sun, 01 May 2022,                                       
 check_out: Tue, 10 May 2022,                                      
 created_at: Mon, 23 May 2022 10:10:33.949891000 UTC +00:00,       
 updated_at: Mon, 23 May 2022 10:12:29.679111000 UTC +00:00>       
3.0.0 :035 > reservation.save
  TRANSACTION (0.2ms)  BEGIN
  Reservation Update (0.2ms)  UPDATE "reservations" SET "date" = $1, "updated_at" = $2 WHERE "reservations"."id" = $3  [["date", "2022-05-01"], ["updated_at", "2022-05-23 10:18:19.319940"], ["id", 1]]
  TRANSACTION (0.5ms)  COMMIT                                      
 => true 
 
 3.0.0 :038 > room.name = "A Single room"
 => "A Single room" 
3.0.0 :039 > room.price = "1500"
 => "1500" 
3.0.0 :040 > room
 => #<Room:0x00007f7f9450f260 id: 1, created_at: Mon, 23 May 2022 10:20:08.042504000 UTC +00:00, updated_at: Mon, 23 May 2022 10:20:08.042504000 UTC +00:00, name: "A Single room", price: "1500"> 
3.0.0 :041 > room.save
  TRANSACTION (0.3ms)  BEGIN
  Room Update (0.7ms)  UPDATE "rooms" SET "updated_at" = $1, "name" = $2, "price" = $3 WHERE "rooms"."id" = $4  [["updated_at", "2022-05-23 10:22:36.147447"], ["name", "A Single room"], ["price", "1500"], ["id", 1]]                                               
  TRANSACTION (6.7ms)  COMMIT                               
3.0.0 :042 >

hms_development=# select * from rooms;
 id |         created_at         |         updated_at         |     name      | price 
----+----------------------------+----------------------------+---------------+-------
  1 | 2022-05-23 10:20:08.042504 | 2022-05-23 10:22:36.147447 | A Single room | 1500
(1 row)


itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_foreign_key_to_reservations_from_customers 
      invoke  active_record                                 
      create    db/migrate/20220523112037_add_foreign_key_to_reservations_from_customers.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523112037 AddForeignKeyToReservationsFromCustomers: migrating =========
-- add_column(:reservations, :customer_id, :integer)        
   -> 0.0012s                                               
-- add_foreign_key(:reservations, :customers)
   -> 0.0013s               
== 20220523112037 AddForeignKeyToReservationsFromCustomers: migrated (0.0026s) 
                            
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_foreign_key_to_rooms_from_customers
      invoke  active_record 
      create    db/migrate/20220523115445_add_foreign_key_to_rooms_from_customers.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523115445 AddForeignKeyToRoomsFromCustomers: migrating ================
-- column(:rooms, :customer_id, :integer)
rails aborted!
StandardError: An error has occurred, this and all later migrations canceled:

undefined method `column' for #<AddForeignKeyToRoomsFromCustomers:0x00007f9070905760 @name="AddForeignKeyToRoomsFromCustomers", @version=20220523115445, @connection=nil>
/home/itsacheckmate/Training/rails/hms/db/migrate/20220523115445_add_foreign_key_to_rooms_from_customers.rb:3:in `change'

Caused by:
NoMethodError: undefined method `column' for #<AddForeignKeyToRoomsFromCustomers:0x00007f9070905760 @name="AddForeignKeyToRoomsFromCustomers", @version=20220523115445, @connection=nil>
/home/itsacheckmate/Training/rails/hms/db/migrate/20220523115445_add_foreign_key_to_rooms_from_customers.rb:3:in `change'
Tasks: TOP => db:migrate
(See full trace by running task with --trace)
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523115445 AddForeignKeyToRoomsFromCustomers: migrating ================
-- add_column(:rooms, :customer_id, :integer)
   -> 0.0010s
-- add_foreign_key(:rooms, :customers)
   -> 0.0010s
== 20220523115445 AddForeignKeyToRoomsFromCustomers: migrated (0.0021s) =======

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_foreign_key_to_payments_from_customers
      invoke  active_record
      create    db/migrate/20220523115956_add_foreign_key_to_payments_from_customers.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523115956 AddForeignKeyToPaymentsFromCustomers: migrating =============
-- add_column(:payments, :customer_id, :integer)
   -> 0.0012s
-- add_foreign_key(:payments, :customers)
   -> 0.0011s
== 20220523115956 AddForeignKeyToPaymentsFromCustomers: migrated (0.0023s) ====


#<Payment:0x00007f21bc65f7e0                                             
...                                                                      
3.0.0 :003 > payment
 => 
#<Payment:0x00007f21bc65f7e0                                             
 id: 1,                                                                  
 paid: true,                                                             
 date: Mon, 09 May 2022,                                                 
 created_at: Mon, 23 May 2022 10:08:44.637445000 UTC +00:00,             
 updated_at: Mon, 23 May 2022 10:08:44.637445000 UTC +00:00,             
 customer_id: nil>                                                       
3.0.0 :004 > payment.customer_id = 1
 => 1 
3.0.0 :005 > payment
 => 
#<Payment:0x00007f21bc65f7e0                                   
 id: 1,                                                        
 paid: true,                                                   
 date: Mon, 09 May 2022,                                       
 created_at: Mon, 23 May 2022 10:08:44.637445000 UTC +00:00,   
 updated_at: Mon, 23 May 2022 10:08:44.637445000 UTC +00:00,   
 customer_id: 1>                                               
3.0.0 :006 > payment.save 
  TRANSACTION (0.1ms)  BEGIN
  Payment Update (0.4ms)  UPDATE "payments" SET "updated_at" = $1, "customer_id" = $2 WHERE "payments"."id" = $3  [["updated_at", "2022-05-23 12:04:22.783564"], ["customer_id", 1], ["id", 1]]                      
  TRANSACTION (6.5ms)  COMMIT                                  
 => true                                                       
3.0.0 :007 > room 
                                                               

 dependencies-
    db:create creates the database for the current env
    db:create:all creates the databases for all envs
    db:drop drops the database for the current env
    db:drop:all drops the databases for all envs
    db:migrate runs migrations for the current env that have not run yet
    db:migrate:up runs one specific migration
    db:migrate:down rolls back one specific migration
    db:migrate:status shows current migration status
    db:rollback rolls back the last migration
    db:forward advances the current schema version to the next one
    db:seed (only) runs the db/seed.rb file
    db:schema:load loads the schema into the current env's database
    db:schema:dump dumps the current env's schema (and seems to create the db as well)
    db:setup runs db:create db:schema:load db:seed
    db:reset runs db:drop db:setup
    db:migrate:redo runs (db:migrate:down db:migrate:up) or (db:rollback db:migrate) depending on the specified migration
 db:migrate:reset runs db:drop db:create db:migrate
                                                           
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523130159 ChangeProductsPrice: migrating ==============================
-- change_table(:rooms)
   -> 0.0060s
== 20220523130159 ChangeProductsPrice: migrated (0.0061s) =====================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration AddIndexToCustomers
      invoke  active_record
      create    db/migrate/20220523133906_add_index_to_customers.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523133906 AddIndexToCustomers: migrating ==============================
-- add_index(:customers, :name)
   -> 0.0030s
== 20220523133906 AddIndexToCustomers: migrated (0.0030s) =====================

                                                             
Passing Modifiers - 

(See full trace by running task with --trace)
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523135405 AddDetailsToRooms: migrating ================================
-- add_column(:rooms, :price_of_food, :decimal, {:precision=>5, :scale=>2})
   -> 0.0011s
-- add_reference(:rooms, :rooms, {:polymorphic=>true, :null=>true})
   -> 0.0054s
== 20220523135405 AddDetailsToRooms: migrated (0.0065s) =======================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration create_join_table
      invoke  active_record
      create    db/migrate/20220523140056_create_join_table.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523140056 CreateJoinTable: migrating ==================================
-- create_join_table(:customers, :reservations, {:column_options=>{:null=>true}, :table_name=>:categorization})
   -> 0.0017s
== 20220523140056 CreateJoinTable: migrated (0.0017s) =========================

change_table method
class ChangeTableOfReservations < ActiveRecord::Migration[7.0]
  def change
    change_table :reservations do |t|
      t.remove :check_in, :check_out
      t.time :check_in_hotel
      t.time :check_out_hotel
      t.rename :confirmed, :confirm
    end
  end
end
                                                                             
The add_reference method allows the creation of an appropriately named column.

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523143957 AddReferenceToReservations: migrating =======================
-- add_reference(:reservations, :room, {:index=>false})
   -> 0.0010s
== 20220523143957 AddReferenceToReservations: migrated (0.0011s) ==============


Foreign keys can also be removed:

# let Active Record figure out the column name
remove_foreign_key :accounts, :branches

# remove foreign key for a specific column
remove_foreign_key :accounts, column: :owner_id

              itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523144430 RemoveForeignKeyFromReservations: migrating =================
-- remove_foreign_key(:rooms, {:column=>:customer_id})
   -> 0.0027s
== 20220523144430 RemoveForeignKeyFromReservations: migrated (0.0027s) ========

3.10 Using reversible

Complex migrations may require processing that Active Record doesn't know how to reverse. You can use reversible to specify what to do when running a migration and what else to do when reverting it.


using the db:rollback

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:rollback
== 20220523151500 ExampleMigration: reverting =================================
-- execute("    ALTER TABLE distributors\n    DROP CONSTRAINT zipchk\n")
   -> 0.0012s
-- drop_table(:distributors)
   -> 0.0008s
== 20220523151500 ExampleMigration: reverted (0.0086s) ========================


Schema in db folder in Rails project 
 Schema
It tends to be faster and less error prone to create a new instance of your applications database by 
loading the schema file via bin/rails db:schema:load than it is to replay the entire migration history.
The format of the schema dump generated by Rails is controlled by the config.active_record.schema_format setting in config/application.rb. 
By default, the format is :ruby, but can also be set to :sql.
If :ruby is selected, then the schema is stored in db/schema.rb
The Active Record way claims that intelligence belongs in your models, not in the database. 
As such, features such as triggers or constraints, which push some of that intelligence back into the database, are not heavily use

Seeing the table of all the migrations done in the project 
The db/schema.rb or db/structure.sql is a snapshot of the current state of your database 
and is the authoritative source for rebuilding that database. 
This makes it possible to delete old migration files.
When you delete migration files in the db/migrate/ directory, any environment 
where bin/rails db:migrate was run when those files still existed will hold a reference to the 
migration timestamp specific to them inside an internal Rails database table named schema_migrations. 
This table is used to keep track of whether migrations have been executed in a specific environment.
If you run the bin/rails db:migrate:status command, which displays the status (up or down) of each migration
itsacheckmate@itsacheckmate:~/Training/Ruby/Rails/rails_lms_project$ rails db:migrate:status

database: 
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate:status

database: hms_development

 Status   Migration ID    Migration Name
--------------------------------------------------
   up     20220523084619  Create customers
   up     20220523090358  Create rooms
   up     20220523091950  Add country to customers
   up     20220523092421  Add name to rooms
   up     20220523092443  Add price to rooms
   up     20220523095204  Create payments
   up     20220523095341  Create reservations
   up     20220523112037  Add foreign key to reservations from customers
   up     20220523115445  Add foreign key to rooms from customers
   up     20220523115956  Add foreign key to payments from customers
   up     20220523130159  Change products price
   up     20220523133906  Add index to customers
   up     20220523134101  Add column to rooms
   up     20220523134209  Remove column from rooms
   up     20220523135405  Add details to rooms
   up     20220523140056  Create join table
   up     20220523140532  Change table of reservations
   up     20220523140945  Change column of rooms
   up     20220523141304  Change column default of reservations
   up     20220523143957  Add reference to reservations
   up     20220523144430  Remove foreign key from reservations
   up     20220523151500  Example migration
  down    20220523171005  Add initial products


By default migrations tell you exactly what they're doing and how long it took. A migration creating a table and adding an index might produce output like this

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220523172159 CreateProducts: migrating ===================================
-- Created a Table
   -> and an index!
-- Waiting a while
   -> 10.0102s
   -> 250 rows
== 20220523172159 CreateProducts: migrated (10.0212s) =========================


removing timestamps from a column

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration remove_timestamps_from_rooms created_at updated_at
      invoke  active_record
      create    db/migrate/20220523175527_remove_timestamps_from_rooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:migrate
== 20220523175527 RemoveTimestampsFromRooms: migrating ========================
-- remove_column(:rooms, :created_at, :string)
   -> 0.0010s
-- remove_column(:rooms, :updated_at, :string)
   -> 0.0003s
== 20220523175527 RemoveTimestampsFromRooms: migrated (0.0014s) ===============

itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:test:prepare


 If you need to undo several migrations you can provide a STEP parameter:=
$ bin/rails db:rollback STEP=3
will revert the last 3 migrations.

itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails db:rollback STEP=2
== 20220520134955 AddYearOfPassingToQualifications: reverting =================
-- remove_column(:qualifications, :year_of_passing, :date)
   -> 0.0020s
== 20220520134955 AddYearOfPassingToQualifications: reverted (0.0091s) ========

== 20220520130539 AddEndTimeToAttendance: reverting ===========================
-- remove_column(:attendances, :end_at, :string)
   -> 0.0009s
== 20220520130539 AddEndTimeToAttendance: reverted (0.0010s) ==================

The db:migrate:redo command is a shortcut for doing a rollback and then migrating back up again. As with the db:rollback command, you can use the STEP parameter if you need to go more than one version back, for example:

$ bin/rails db:migrate:redo STEP=3

itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails db:migrate:redo STEP=1
== 20220520134955 AddYearOfPassingToQualifications: reverting =================
-- remove_column(:qualifications, :year_of_passing, :date)
   -> 0.0010s
== 20220520134955 AddYearOfPassingToQualifications: reverted (0.0045s) ========

== 20220520134955 AddYearOfPassingToQualifications: migrating =================
-- add_column(:qualifications, :year_of_passing, :date)
   -> 0.0012s
== 20220520134955 AddYearOfPassingToQualifications: migrated (0.0012s) ========


Active Record supports the following database column types:

:binary
:boolean
:date
:datetime
:decimal
:integer
:float
:integer
:primary_key
:string
:text
:time
:timestamp

Run "rails destroy migration migration_name" (migration_name is the one use chose while creating migration).
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails destroy migration AddColumnToQualifications
      invoke  active_record
      remove    db/migrate/20220524110355_add_column_to_qualifications.rb


dropping a specific table
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails g migration DropTempTable
      invoke  active_record
      create    db/migrate/20220524111954_drop_temp_table.rb
itsacheckmate@itscheckmate:~/Training/rails/attendance_management_system$ rails db:migrate 
== 20220524111954 DropTempTable: migrating ====================================
-- drop_table(:temp_tables)
   -> 0.0077s
== 20220524111954 DropTempTable: migrated (0.0078s) ===========================

droping index -
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524112847 RemoveIndexFromCustomers: migrating =========================
-- remove_index(:customers, :name)
   -> 0.0041s
== 20220524112847 RemoveIndexFromCustomers: migrated (0.0041s) ================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_foreign_key_to_rooms
      invoke  active_record
      create    db/migrate/20220524121824_add_foreign_key_to_rooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524121824 AddForeignKeyToRooms: migrating =============================
-- add_foreign_key(:rooms, :customers)
   -> 0.0048s
== 20220524121824 AddForeignKeyToRooms: migrated (0.0048s) ====================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_foreign_key_to_rooms
      invoke  active_record
      create    db/migrate/20220524121824_add_foreign_key_to_rooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524121824 AddForeignKeyToRooms: migrating =============================
-- add_foreign_key(:rooms, :customers)
   -> 0.0048s
== 20220524121824 AddForeignKeyToRooms: migrated (0.0048s) ====================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:rollback
== 20220524123050 RemoveProducts: reverting ===================================
rails aborted!
StandardError: An error has occurred, this and all later migrations canceled:

uninitialized constant ActiveRecord::Irreversible
Did you mean?  ActiveRecord::IrreversibleMigration
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524123050_remove_products.rb:7:in `down'

Caused by:
NameError: uninitialized constant ActiveRecord::Irreversible
Did you mean?  ActiveRecord::IrreversibleMigration
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524123050_remove_products.rb:7:in `down'
Tasks: TOP => db:rollback
(See full trace by running task with --trace)
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate:status

database: hms_development

 Status   Migration ID    Migration Name
--------------------------------------------------
   up     20220523084619  Create customers
   up     20220523090358  Create rooms
   up     20220523091950  Add country to customers
   up     20220523092421  Add name to rooms
   up     20220523092443  Add price to rooms
   up     20220523095204  Create payments
   up     20220523095341  Create reservations
   up     20220523112037  Add foreign key to reservations from customers
   up     20220523115445  Add foreign key to rooms from customers
   up     20220523115956  Add foreign key to payments from customers
   up     20220523130159  Change products price
   up     20220523133906  Add index to customers
   up     20220523134101  Add column to rooms
   up     20220523134209  Remove column from rooms
   up     20220523135405  Add details to rooms
   up     20220523140056  Create join table
   up     20220523140532  Change table of reservations
   up     20220523140945  Change column of rooms
   up     20220523141304  Change column default of reservations
   up     20220523143957  Add reference to reservations
   up     20220523144430  Remove foreign key from reservations
   up     20220523151500  Example migration
   up     20220523172159  Create products
   up     20220523173734  Using column modifiers
   up     20220523174902  Fix column name
   up     20220523175527  Remove timestamps from rooms
   up     20220523175853  Removing join from table
   up     20220524112847  Remove index from customers
   up     20220524121824  Add foreign key to rooms
   up     20220524123050  Remove products


tsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration adding_comment_to_column                                       
      invoke  active_record 
      create    db/migrate/20220524125850_adding_comment_to_column.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524125850 AddingCommentToColumn: migrating ============================
-- change_column(:rooms, :id, :string, {:comment=>"these are the rooms allotted to the respective customers"})
   -> 0.0140s               
== 20220524125850 AddingCommentToColumn: migrated (0.0141s) ===================
                            
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration changing_column_default                  
      invoke  active_record
      create    db/migrate/20220524134917_changing_column_default.rb


itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_extension
      invoke  active_record
      create    db/migrate/20220524141100_add_extension.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524141100 AddExtension: migrating =====================================
-- extensions()
   -> 0.0006s
-- enable_extension(".html")
rails aborted!
StandardError: An error has occurred, this and all later migrations canceled:

PG::UndefinedFile: ERROR:  could not open extension control file "/usr/share/postgresql/12/extension/.html.control": No such file or directory
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524141100_add_extension.rb:3:in `change'

Caused by:
ActiveRecord::StatementInvalid: PG::UndefinedFile: ERROR:  could not open extension control file "/usr/share/postgresql/12/extension/.html.control": No such file or directory
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524141100_add_extension.rb:3:in `change'

Caused by:
PG::UndefinedFile: ERROR:  could not open extension control file "/usr/share/postgresql/12/extension/.html.control": No such file or directory
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524141100_add_extension.rb:3:in `change'
Tasks: TOP => db:migrate
(See full trace by running task with --trace)
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524141100 AddExtension: migrating =====================================
-- extensions()
   -> 0.0009s
-- enable_extension("uuid-ossp")
   -> 0.0049s
== 20220524141100 AddExtension: migrated (0.0058s) ============================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration remove_extension
      invoke  active_record
      create    db/migrate/20220524141336_remove_extension.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524141336 RemoveExtension: migrating ==================================
-- disable_extension("uuid-ossp")
   -> 0.0026s
== 20220524141336 RemoveExtension: migrated (0.0026s) =========================
the null flag indicates whether the value can be NULL
itsacheckmate@itscheckmate:~/Training/rails/hms$ 

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524141509 ChangingColumnNull: migrating ===============================
-- change_column_null(:customers, :name, false)
   -> 0.0010s
== 20220524141509 ChangingColumnNull: migrated (0.0010s)

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524142252 AddIndexToRooms: migrating ==================================
-- add_index(:rooms, :name_of_customer)
   -> 0.0081s
== 20220524142252 AddIndexToRooms: migrated (0.0081s) =========================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration rename_index
      invoke  active_record
      create    db/migrate/20220524142403_rename_index.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524142403 RenameIndex: migrating ======================================
-- rename_index(:rooms, "index_rooms_on_name_of_customer", "index_rooms_on_users")
   -> 0.0009s
== 20220524142403 RenameIndex: migrated (0.0009s) =============================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration RemoveIndexROoms
      invoke  active_record
      create    db/migrate/20220524142541_remove_index_r_ooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration RemoveIndexRooms
      invoke  active_record
      create    db/migrate/20220524142557_remove_index_rooms.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524142557 RemoveIndexRooms: migrating =================================
-- remove_index(:rooms, :name_of_customer)
   -> 0.0021s
== 20220524142557 RemoveIndexRooms: migrated (0.0021s) ========================

itsacheckmate@itscheckmate:~/Training/rails/hms$ 

 change_table_comment(table_name, comment_or_changes)
Link

Changes the comment for a table or removes it if nil.

Fixtures contain data which can be loaded into your database using migrations. For example, to load data into a table named customers.

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g migration add_irreversible_method
      invoke  active_record
      create    db/migrate/20220524175657_add_irreversible_method.rb
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524175657 AddIrreversibleMethod: migrating ============================
-- drop_table(:distributors)
   -> 0.0015s
== 20220524175657 AddIrreversibleMethod: migrated (0.0016s) ===================

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:rollback
== 20220524175657 AddIrreversibleMethod: reverting ============================
rails aborted!
StandardError: An error has occurred, this and all later migrations canceled:

ActiveRecord::IrreversibleMigration
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524175657_add_irreversible_method.rb:7:in `down'

Caused by:
ActiveRecord::IrreversibleMigration: ActiveRecord::IrreversibleMigration
/home/itsacheckmate/Training/rails/hms/db/migrate/20220524175657_add_irreversible_method.rb:7:in `down'
Tasks: TOP => db:rollback
(See full trace by running task with --trace)

itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:version
Current version: 20220524175657

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate 
== 20220524181038 UpDownReversibleAddingColumn: migrating =====================
-- add_column(:rooms, :sku, :integer)
   -> 0.0011s
-- execute("select * from rooms")
   -> 0.0004s
["2", "double room", "1900", nil, nil, nil, nil, nil]
["1", "A Single room", "1500", 1, nil, nil, nil, nil]
== 20220524181038 UpDownReversibleAddingColumn: migrated (0.0016s) ============

itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:migrate VERSION=20220524175657
itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate:status

database: hms_development

 Status   Migration ID    Migration Name
--------------------------------------------------
   up     20220523084619  Create customers
   up     20220523090358  Create rooms
   up     20220523091950  Add country to customers
   up     20220523092421  Add name to rooms
   up     20220523092443  Add price to rooms
   up     20220523095204  Create payments
   up     20220523095341  Create reservations
   up     20220523112037  Add foreign key to reservations from customers
   up     20220523115445  Add foreign key to rooms from customers
   up     20220523115956  Add foreign key to payments from customers
   up     20220523130159  Change products price
   up     20220523133906  Add index to customers
   up     20220523134101  Add column to rooms
   up     20220523134209  Remove column from rooms
   up     20220523135405  Add details to rooms
   up     20220523140056  Create join table
   up     20220523140532  Change table of reservations
   up     20220523140945  Change column of rooms
   up     20220523141304  Change column default of reservations
   up     20220523143957  Add reference to reservations
   up     20220523144430  Remove foreign key from reservations
   up     20220523151500  Example migration
   up     20220523172159  Create products
   up     20220523173734  Using column modifiers
   up     20220523174902  Fix column name
   up     20220523175527  Remove timestamps from rooms
   up     20220523175853  Removing join from table
   up     20220524112847  Remove index from customers
   up     20220524121824  Add foreign key to rooms
   up     20220524123050  Remove products
   up     20220524125850  Adding comment to column
   up     20220524134917  Changing column default
   up     20220524135938  Add comment and changing default of column
   up     20220524141100  Add extension
   up     20220524141336  Remove extension
   up     20220524141509  Changing column null
   up     20220524142252  Add index to rooms
   up     20220524142403  Rename index
   up     20220524142557  Remove index rooms
   up     20220524142915  Change table comment
   up     20220524161251  Add records to customers
   up     20220524175657  Add irreversible method
  down    20220524181038  Up down reversible adding column

itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:create
Database 'hms_development' already exists
Database 'hms_test' already exists
itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:create:all'
> ^C
itsacheckmate@itscheckmate:~/Training/rails/hms$ rake db:create:all
Database 'hms_development' already exists
Database 'hms_test' already exists
There is an issue connecting to your database with your username/password, username: hms.

Please check your database configuration to ensure the username/password are valid.
Couldn't create 'hms_production' database. Please check your configuration.
rake aborted!
ActiveRecord::DatabaseConnectionError: There is an issue connecting to your database with your username/password, username: hms.

Please check your database configuration to ensure the username/password are valid.
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:83:in `rescue in new_client'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:77:in `new_client'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `postgresql_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:656:in `public_send'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:656:in `new_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:700:in `checkout_new_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:679:in `try_to_checkout_new_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:640:in `acquire_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:341:in `checkout'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:181:in `connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_handler.rb:211:in `retrieve_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_handling.rb:313:in `retrieve_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_handling.rb:280:in `connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/postgresql_database_tasks.rb:12:in `connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/postgresql_database_tasks.rb:26:in `create'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:122:in `create'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:134:in `block in create_all'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:567:in `block in each_local_configuration'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:563:in `each'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:563:in `each_local_configuration'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:134:in `create_all'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/railties/databases.rake:31:in `block (3 levels) in <main>'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/rake-13.0.6/exe/rake:27:in `<top (required)>'

Caused by:
PG::ConnectionBad: FATAL:  Peer authentication failed for user "hms"
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/pg-1.3.5/lib/pg/connection.rb:637:in `async_connect_or_reset'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/pg-1.3.5/lib/pg/connection.rb:707:in `new'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/pg-1.3.5/lib/pg.rb:69:in `connect'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:78:in `new_client'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `postgresql_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:656:in `public_send'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:656:in `new_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:700:in `checkout_new_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:679:in `try_to_checkout_new_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:640:in `acquire_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:341:in `checkout'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:181:in `connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_adapters/abstract/connection_handler.rb:211:in `retrieve_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_handling.rb:313:in `retrieve_connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/connection_handling.rb:280:in `connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/postgresql_database_tasks.rb:12:in `connection'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/postgresql_database_tasks.rb:26:in `create'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:122:in `create'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:134:in `block in create_all'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:567:in `block in each_local_configuration'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:563:in `each'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:563:in `each_local_configuration'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/tasks/database_tasks.rb:134:in `create_all'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/railties/databases.rake:31:in `block (3 levels) in <main>'
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/rake-13.0.6/exe/rake:27:in `<top (required)>'
Tasks: TOP => db:create:all
(See full trace by running task with --trace)


Image result for what is scaffolding in rails
Rails scaffolding is a quick way to generate some of the major pieces of an application. If you want to create the models, views, and controllers for a new resource in a single operation, scaffolding is the tool for the job.

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails db:migrate
== 20220524190451 CreateProductTableUsingMethodInIt: migrating ================
-- create_table(:products)
   -> 0.0036s
-- create_table(:categories)
   -> 0.0054s
-- add_column(:products, :description, :string)
   -> 0.0005s
-- rename_column(:products, :categoryid, :category_id)
   -> 0.0012s
-- add_timestamps(:categories)
   -> 0.0009s
-- change_column_null(:products, :updated_at, true)
   -> 0.0006s
-- remove_timestamps(:products)
   -> 0.0004s
-- add_foreign_key(:products, :categories)
   -> 0.0010s
-- remove_foreign_key(:products, :categories)
   -> 0.0020s
-- remove_timestamps(:categories)
   -> 0.0004s
-- add_index(:categories, :name)
   -> 0.0014s
-- rename_index(:categories, "index_categories_on_name", "index_product_categories_on_name")
   -> 0.0005s
-- remove_index(:categories, :name)
   -> 0.0010s
-- remove_column(:products, :description)
   -> 0.0006s
-- add_reference(:categories, :name, {:index=>true})
   -> 0.0018s
-- remove_reference(:categories, :name, {:index=>false})
   -> 0.0004s
== 20220524190451 CreateProductTableUsingMethodInIt: migrated (0.0223s) =======

itsacheckmate@itscheckmate:~/Training/rails/hms$ rails g scaffold food_item title:string food_items:string 
      invoke  active_record
      create    db/migrate/20220525073108_create_food_items.rb
      create    app/models/food_item.rb
      invoke    test_unit
      create      test/models/food_item_test.rb
      create      test/fixtures/food_items.yml
      invoke  resource_route
       route    resources :food_items
      invoke  scaffold_controller
      create    app/controllers/food_items_controller.rb
      invoke    erb
      create      app/views/food_items
      create      app/views/food_items/index.html.erb
      create      app/views/food_items/edit.html.erb
      create      app/views/food_items/show.html.erb
      create      app/views/food_items/new.html.erb
      create      app/views/food_items/_form.html.erb
      create      app/views/food_items/_food_item.html.erb
      invoke    resource_route
      invoke    test_unit
      create      test/controllers/food_items_controller_test.rb
      create      test/system/food_items_test.rb
      invoke    helper
      create      app/helpers/food_items_helper.rb
      invoke      test_unit
      invoke    jbuilder
      create      app/views/food_items/index.json.jbuilder
      create      app/views/food_items/show.json.jbuilder

class CreateFoodItems < ActiveRecord::Migration[7.0]
  def change
    create_table :food_items do |t|
      t.string :title
      t.string :food_items

      t.timestamps
    end
  end
end


Fixtures are ActiveRecord Objects

UUID - UUID is an abbreviation for Universal Unique Identifier defined by RFC 4122 and has a size of 128-bit. It is created using internal algorithms that always generate a unique value. PostgreSQL has its own UUID data type and provides modules to generate them.

UUID is a random string in a predefined format. Sample value looks like that:
ccbb63c0-a8cd-47b7-8445-5d85e9c80977

itsacheckmate@itscheckmate:~/Training/rails/book_collection$ rails g migration EnableUUID
      invoke  active_record
      create    db/migrate/20220525153144_enable_uuid.rb
itsacheckmate@itscheckmate:~/Training/rails/book_collection$ rails db:migrate
== 20220525153144 EnableUuid: migrating =======================================
-- enable_extension("pgcrypto")
   -> 0.0143s
== 20220525153144 EnableUuid: migrated (0.0144s) ==============================
#<Creator:0x000055afcb318028                                   
 id: "9470a3a1-896a-49da-91e7-2d4ef2187574",                   
 name: "Jaskaran",                                             
 created_at: Wed, 25 May 2022 16:09:15.601277000 UTC +00:00,   
 updated_at: Wed, 25 May 2022 16:09:15.601277000 UTC +00:00>   
3.0.0 :006 > 

book_collection_development=# \d customers;
                                    Table "public.customers"
   Column    |              Type              | Collation | Nullable |          Default          
-------------+--------------------------------+-----------+----------+---------------------------
 customer_id | integer                        |           | not null | 
 name        | character varying(30)          |           | not null | 
 age         | integer                        |           |          | 
 premium     | boolean                        |           |          | false
 photo       | bytea                          |           |          | 
 created_at  | timestamp(6) without time zone |           | not null | 
 updated_at  | timestamp(6) without time zone |           | not null | 
 notes       | text                           |           |          | 'No notes recorded'::text
Indexes:
    "customers_pkey" PRIMARY KEY, btree (customer_id)


