If you're used to using raw SQL to find database records, then you will generally find that there are better ways to carry out the same operations in Rails. Active Record insulates you from the need to use SQL in most cases.

Active Record will perform queries on the database for you and is compatible with most database systems, including MySQL, MariaDB, PostgreSQL, and SQLite. Regardless of which database system you're using, the Active Record method format will always be the same.

To retrieve objects from the database, Active Record provides several finder methods. Each finder method allows you to pass arguments into it to perform certain queries on your database without writing raw SQL.

1.annotate - Adds an SQL comment to queries generated from this relation. 
3.0.0 :004 > Book.annotate("Selecting Book  names").select(:title)
  Book Load (0.6ms)  SELECT "books"."title" FROM "books" /* Selecting Book  names */
 =>                                                                                                                   
[#<Book:0x00007f09a0b0de10 id: nil, title: "1234">,                                                                   
 #<Book:0x00007f09a0b0dd48 id: nil, title: "Rich Dad Poor Dad">,
 #<Book:0x00007f09a0b0dc80 id: nil, title: "3242334">,
 #<Book:0x00007f09a0b0dbb8 id: nil, title: nil>,    
 #<Book:0x00007f09a0b0daf0 id: nil, title: "">,     
 #<Book:0x00007f09a0b0da28 id: nil, title: "IT">,   
 #<Book:0x00007f09a0b0d960 id: nil, title: "The Shining">,
 #<Book:0x00007f09a0b0d898 id: nil, title: "Harry Potter">,
 #<Book:0x00007f09a0b0d7d0 id: nil, title: "Firestarter">] 

2.find - 3.0.0 :005 > Author.find(1)
  Author Load (0.8ms)  SELECT "authors".* FROM "authors" WHERE "authors"."id" = $1 LIMIT $2  [["id", 1], ["LIMIT", 1]]
 =>                                                           
#<Author:0x0000556624fd7700                                   
 id: 1,                                                       
 name: "David Goggins",                                       
 dob: Tue, 05 May 1970,                                       
 gender: "Male",                                              
 country: "America",                                          
 created_at: Wed, 25 May 2022 11:47:49.986085000 UTC +00:00,  
 updated_at: Tue, 31 May 2022 13:28:25.048096000 UTC +00:00,  
 lock_version: 1,                                             
 email_address: "david@gmail.com">  
 
 3. create_with(value)
Sets attributes to be used when creating new records from a relation object.
3.0.0 :017 > author = Author.where(name: "Robin Sharma")
  Author Load (1.3ms)  SELECT "authors".* FROM "authors" WHERE "authors"."name" = $1  [["name", "Robin Sharma"]]
 => []                                                                 
3.0.0 :018 > author.new.name
 => "Robin Sharma" 
3.0.0 :019 > author = authors.create_with(name: "Steve")
(irb):19:in `<main>': undefined local variable or method `authors' for main:Object (NameError)
Did you mean?  author                                                                  
3.0.0 :020 > author = author.create_with(name: "Steve")
  Author Load (0.4ms)  SELECT "authors".* FROM "authors" WHERE "authors"."name" = $1  [["name", "Robin Sharma"]]
 => []                                                                                 
3.0.0 :021 > author.new.name
 => "Steve" 

4. distinct
Specifies whether the records should be unique or not

3.0.0 :024 > Book.select(:title).distinct
  Book Load (1.0ms)  SELECT DISTINCT "books"."title" FROM "books"
 =>                                                                                
[#<Book:0x000055662441d540 id: nil, title: nil>,                                   
 #<Book:0x000055662441d478 id: nil, title: "The Shining">,       
 #<Book:0x000055662441d3b0 id: nil, title: "3242334">,           
 #<Book:0x000055662441d2e8 id: nil, title: "Harry Potter">,      
 #<Book:0x000055662441d220 id: nil, title: "">,                  
 #<Book:0x000055662441d158 id: nil, title: "Rich Dad Poor Dad">, 
 #<Book:0x000055662441d090 id: nil, title: "Firestarter">,       
 #<Book:0x000055662441cfc8 id: nil, title: "IT">,                
 #<Book:0x000055662441cf00 id: nil, title: "1234">]  
 
  eager_load(*args)-
Forces eager loading by performing a LEFT OUTER JOIN on args:
3.0.0 :044 > Author.eager_load(:books)
  SQL (1.1ms)  SELECT "authors"."id" AS t0_r0, "authors"."name" AS t0_r1, "authors"."dob" AS t0_r2, "authors"."gender" AS t0_r3, "authors"."country" AS t0_r4, "authors"."created_at" AS t0_r5, "authors"."updated_at" AS t0_r6, "authors"."lock_version" AS t0_r7, "authors"."email_address" AS t0_r8, "books"."id" AS t1_r0, "books"."title" AS t1_r1, "books"."total_page" AS t1_r2, "books"."rating" AS t1_r3, "books"."price" AS t1_r4, "books"."created_at" AS t1_r5, "books"."updated_at" AS t1_r6, "books"."date_published" AS t1_r7, "books"."publisher_id" AS t1_r8, "books"."author_id" AS t1_r9 FROM "authors" LEFT OUTER JOIN "authors_books" ON "authors_books"."author_id" = "authors"."id" LEFT OUTER JOIN "books" ON "books"."id" = "authors_books"."book_id"

 extract_associated(association) - 
Extracts a named association from the relation. The named association is first preloaded, then the individual association records are collected from the relation. Like so:

 from - Specifies the table from which the records will be fetched. For example:
 3.0.0 :009 > Book.select('title').from('books')
  Book Load (0.6ms)  SELECT "books"."title" FROM books
 =>                                                                                       
[#<Book:0x00007f18e869cd20 id: nil, title: "1234">,                                       
 #<Book:0x00007f18e88bd2a8 id: nil, title: "Rich Dad Poor Dad">,
 #<Book:0x00007f18e88bd168 id: nil, title: "3242334">,
 #<Book:0x00007f18e88bd0a0 id: nil, title: nil>,
 #<Book:0x00007f18e88bcfd8 id: nil, title: "">,
 #<Book:0x00007f18e88bce98 id: nil, title: "IT">,
 #<Book:0x00007f18e88bcd80 id: nil, title: "The Shining">,
 #<Book:0x00007f18e88bcab0 id: nil, title: "Harry Potter">,
 #<Book:0x00007f18e88bc998 id: nil, title: "Firestarter">] 
3.0.0 :010 > 

 where
Returns a new relation, which is the result of filtering the current relation according to the conditions in the arguments.

where accepts conditions in one of several formats. In the examples below, the resulting SQL is given as an illustration; the actual query generated may be different depending on the database adapter.
3.0.0 :019 > Book.where("id = '14'")
  Book Load (0.4ms)  SELECT "books".* FROM "books" WHERE (id = '14')
 => 
[#<Book:0x00007efda445e9f0
  id: 14,
  title: "The Shining",
  total_page: 235,
  rating: 4.5,
  price: 0.5234e3,
  created_at: Fri, 03 Jun 2022 17:38:43.865831000 UTC +00:00,
  updated_at: Fri, 03 Jun 2022 17:38:43.865831000 UTC +00:00,
  date_published: Thu, 22 Jun 2000,
  publisher_id: nil,
  author_id: nil>] 
  
  3.0.0 :022 > Author.where(["name = ?","David Goggins"])
  Author Load (0.6ms)  SELECT "authors".* FROM "authors" WHERE (name = 'David Goggins')
 =>                                                           
[#<Author:0x000055f005d1d760                                  
  id: 1,                                                      
  name: "David Goggins",                                      
  dob: Tue, 05 May 1970,                                      
  gender: "Male",
  country: "America",
  created_at: Wed, 25 May 2022 11:47:49.986085000 UTC +00:00,
  updated_at: Tue, 31 May 2022 13:28:25.048096000 UTC +00:00,
  lock_version: 1,
  email_address: "david@gmail.com">] 

 select(*fields) - 
Works in two unique ways.
First: takes a block so it can be used just like Array#select.


 reverse_order() - 
Reverse the existing order clause on the relation.
3.0.0 :028 > Book.order('title ASC').reverse_order
  Book Load (0.7ms)  SELECT "books".* FROM "books" ORDER BY title DESC
 =>                                                         
[#<Book:0x000055f006affdb0                                  
  id: 8,                                                    
  title: nil,
  total_page: nil,
  rating: nil,
  price: nil,
  created_at: Fri, 27 May 2022 16:56:24.649145000 UTC +00:00,
  updated_at: Fri, 27 May 2022 16:56:24.649145000 UTC +00:00,
  date_published: nil,
  publisher_id: nil,
  author_id: nil>,
 #<Book:0x000055f006affce8
  id: 14,
  title: "The Shining",
  total_page: 235,
  rating: 4.5,
  price: 0.5234e3,
  created_at: Fri, 03 Jun 2022 17:38:43.865831000 UTC +00:00,
  updated_at: Fri, 03 Jun 2022 17:38:43.865831000 UTC +00:00,
  date_published: Thu, 22 Jun 2000,
  publisher_id: nil,
  author_id: nil>,
 #<Book:0x000055f006affc20
  id: 5,
  title: "Rich Dad Poor Dad",
  total_page: -1,
  rating: nil,
  price: 0.499e3,
  created_at: Wed, 25 May 2022 18:30:27.231538000 UTC +00:00,
  updated_at: Fri, 27 May 2022 09:21:36.689545000 UTC +00:00,
  date_published: Fri, 08 May 2015,
  publisher_id: 2,
  author_id: nil>,
 #<Book:0x000055f006affb58
  id: 12,
  title: "IT",
  total_page: 235,
  rating: 4.5,
  price: 0.5234e3,
  created_at: Fri, 03 Jun 2022 17:35:14.755240000 UTC +00:00,
  updated_at: Fri, 03 Jun 2022 17:35:14.755240000 UTC +00:00,
  date_published: Fri, 22 Jan 1999,
  publisher_id: nil,
  author_id: nil>,
 #<Book:0x000055f006affa90
  id: 16,
  title: "Harry Potter",
  total_page: 342,
  rating: 4.7,
  price: 0.42e3,
  created_at: Tue, 07 Jun 2022 14:17:24.855374000 UTC +00:00,
  updated_at: Wed, 08 Jun 2022 08:08:28.440667000 UTC +00:00,
  date_published: Sun, 03 Jan 2010,
  publisher_id: nil,
  author_id: 10017>,
 #<Book:0x000055f006aff9c8
  id: 17,
  title: "Firestarter",
  total_page: 400,
  rating: 3.9,
  price: 0.5005e3,
  created_at: Wed, 08 Jun 2022 08:37:17.462921000 UTC +00:00,
  updated_at: Wed, 08 Jun 2022 08:37:17.462921000 UTC +00:00,
  date_published: Sun, 02 May 1999,
  publisher_id: nil,
  author_id: 10017>,
 #<Book:0x000055f006aff900
  id: 7,
  title: "3242334",
  total_page: nil,
  rating: nil,
  price: nil,
  created_at: Fri, 27 May 2022 09:48:18.925743000 UTC +00:00,
  updated_at: Fri, 27 May 2022 09:48:18.925743000 UTC +00:00,
  date_published: nil,
  publisher_id: nil,
  author_id: nil>,
 #<Book:0x000055f006aff838
  id: 6,
  title: "1234",
  total_page: 238,
  rating: nil,
  price: nil,
  created_at: Fri, 27 May 2022 08:52:13.257238000 UTC +00:00,
  updated_at: Fri, 27 May 2022 08:54:06.162250000 UTC +00:00,
  date_published: nil,
  publisher_id: nil,
  author_id: nil>,
 #<Book:0x000055f006aff770
  id: 9,
  title: "",
  total_page: nil,
  rating: nil,
  price: nil,
  created_at: Fri, 27 May 2022 16:57:48.367344000 UTC +00:00,
  updated_at: Fri, 27 May 2022 16:57:48.367344000 UTC +00:00,
  date_published: nil,
  publisher_id: nil,
  author_id: nil>] 
3.0.0 :029 > 

 reselect(*args) - 
Allows you to change a previously set select statement.

3.0.0 :030 > Book.select(:title).reselect(:total_page)
  Book Load (0.4ms)  SELECT "books"."total_page" FROM "books"
 =>                                                                                                 
[#<Book:0x000055f006a1e108 id: nil, total_page: 238>,                                               
 #<Book:0x000055f006a1e018 id: nil, total_page: -1>,                                                
 #<Book:0x000055f006a1df28 id: nil, total_page: nil>,                                               
 #<Book:0x000055f006a1de10 id: nil, total_page: nil>,                                               
 #<Book:0x000055f006a1dd20 id: nil, total_page: nil>,                                               
 #<Book:0x000055f006a1dc30 id: nil, total_page: 235>,                                               
 #<Book:0x000055f006a1db18 id: nil, total_page: 235>,                                               
 #<Book:0x000055f006a1da28 id: nil, total_page: 342>,                                               
 #<Book:0x000055f006a1d938 id: nil, total_page: 400>]   
 
 readonly - Sets readonly attributes for the returned relation. If value is true (default), attempting to update a record will result in an error.
 
 3.0.0 :034 > book = Book.readonly
  Book Load (0.8ms)  SELECT "books".* FROM "books"
 =>                                                                
[#<Book:0x00005
 3.0.0 :036 > book.first.save
/home/itsacheckmate/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/persistence.rb:1123:in `_raise_readonly_record_error': Book is marked as readonly (ActiveRecord::ReadOnlyRecord)

 preload(*args) - Preload loads the association data in a separate query.
   Customer Load (0.7ms)  SELECT "customers".* FROM "customers"
  RoomHotel Load (1.4ms)  SELECT "room_hotels".* FROM "room_hotels" WHERE "room_hotels"."customer_id" IN ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16)  [["customer_id", 1], ["customer_id", 2], ["customer_id", 13], ["customer_id", 14], ["customer_id", 15], ["customer_id", 16], ["customer_id", 17], ["customer_id", 18], ["customer_id", 19], ["customer_id", 20], ["customer_id", 21], ["customer_id", 22], ["customer_id", 27], ["customer_id", 31], ["customer_id", 32], ["customer_id", 35]]
 => 
[#<Customer:0x00007f9e00a39fa8
  id: 1,
  name: "Jaskaran Singh",
  address: "#Sector 20-A Chandigarh",
  gender: "Male",
  mobile: "9876573100",
  check_in: Sun, 01 May 2022,
  check_out: Tue, 10 May 2022,
  created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
  updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e00a39e90
  id: 2,
  name: "Sam Sharma",
  address: "Sector 30,Mumbai",
  gender: "Male",
  mobile: "21313241",
  check_in: Wed, 11 May 2022,
  check_out: Sun, 22 May 2022,
  created_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  updated_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e00a39c38
  id: 13,
  name: "Customer Name 1",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a39a80
  id: 14,
  name: "Customer Name 2",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a398c8
  id: 15,
  name: "Customer Name 3",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a39508
  id: 16,
  name: "Customer Name 4",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a390f8
  id: 17,
  name: "Customer Name 5",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a38d38
  id: 18,
  name: "Customer Name 6",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a389c8
  id: 19,
  name: "Customer Name 7",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a386d0
  id: 20,
  name: "Customer Name 8",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a383b0
  id: 21,
  name: "Customer Name 9",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a33f90
  id: 22,
  name: "Customer Name 10",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a33c98
  id: 27,
  name: "John Doe",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  updated_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00a33b30
  id: 31,
  name: "Sam",
  address: "Faridabad",
  gender: nil,
  mobile: "9876573100",
  check_in: Tue, 10 May 2022,
  check_out: Sat, 14 May 2022,
  created_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  updated_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e00a339f0
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  country: nil,
  email: nil>] 

 Includes

Includes loads the association data in a separate query just like preload.
 3.0.0 :018 >  Customer.includes(:room_hotel).references(:room_hotel).to_a
  SQL (1.5ms)  SELECT "customers"."id" AS t0_r0, "customers"."name" AS t0_r1, "customers"."address" AS t0_r2, "customers"."gender" AS t0_r3, "customers"."mobile" AS t0_r4, "customers"."check_in" AS t0_r5, "customers"."check_out" AS t0_r6, "customers"."created_at" AS t0_r7, "customers"."updated_at" AS t0_r8, "customers"."country" AS t0_r9, "customers"."email" AS t0_r10, "room_hotels"."id" AS t1_r0, "room_hotels"."name" AS t1_r1, "room_hotels"."price" AS t1_r2, "room_hotels"."created_at" AS t1_r3, "room_hotels"."updated_at" AS t1_r4, "room_hotels"."customer_id" AS t1_r5 FROM "customers" LEFT OUTER JOIN "room_hotels" ON "room_hotels"."customer_id" = "customers"."id"                                                            
 =>                                                                                                                          
[#<Customer:0x00007f9e008936b8                                                                                               
  id: 1,                                                                                                                     
  name: "Jaskaran Singh",                                                                                                    
  address: "#Sector 20-A Chandigarh",                                                                                        
  gender: "Male",                                                                                                            
  mobile: "9876573100",                                                                                                      
  check_in: Sun, 01 May 2022,                                                                                                
  check_out: Tue, 10 May 2022,                                                                                               
  created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,                                                                
  updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,                                                                
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e008919a8
  id: 2,
  name: "Sam Sharma",
  address: "Sector 30,Mumbai",
  gender: "Male",
  mobile: "21313241",
  check_in: Wed, 11 May 2022,
  check_out: Sun, 22 May 2022,
  created_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  updated_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e00890ad0
  id: 20,
  name: "Customer Name 8",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e008906c0
  id: 27,
  name: "John Doe",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  updated_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00890148
  id: 17,
  name: "Customer Name 5",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098fb98
  id: 31,
  name: "Sam",
  address: "Faridabad",
  gender: nil,
  mobile: "9876573100",
  check_in: Tue, 10 May 2022,
  check_out: Sat, 14 May 2022,
  created_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  updated_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e0098ee50
  id: 18,
  name: "Customer Name 6",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098e248
  id: 15,
  name: "Customer Name 3",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098d8e8
  id: 13,
  name: "Customer Name 1",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098d3c0
  id: 21,
  name: "Customer Name 9",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098d0a0
  id: 19,
  name: "Customer Name 7",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098cec0
  id: 32,
  name: "Uchiha",
  address: "chd",
  gender: nil,
  mobile: "9876573100",
  check_in: Thu, 05 May 2022,
  check_out: Tue, 10 May 2022,
  created_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
  country: "india",
  email: nil>,
 #<Customer:0x00007f9e0098cbc8
  id: 16,
  name: "Customer Name 4",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098c9e8
  id: 22,
  name: "Customer Name 10",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098c7b8
  id: 14,
  name: "Customer Name 2",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0098c3f8
  id: 35,
  name: "Jas",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  country: nil,
  email: nil>] 
3.0.0 :019 > 

 order(*args)
Applies an ORDER BY clause to a query.
order accepts arguments in one of several formats.
3.0.0 :022 > Customer.order(:name)
  Customer Load (1.3ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."name" ASC
 =>                                                                                   
[#<Customer:0x00007f9e00842470                                                        
  id: 13,                                                                             
  name: "Customer Name 1",                                                            
  address: nil,                                                                       
  gender: nil,                                                                        
  mobile: nil,                                                                        
  check_in: nil,                                                                      
  check_out: nil,                                                                     
  created_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,                         
  updated_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,                         
  country: nil,                                                                       
  email: nil>,                                                                        
 #<Customer:0x00007f9e008423a8                                                        
  id: 22,
  name: "Customer Name 10",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e008422e0
  id: 14,
  name: "Customer Name 2",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00842218
  id: 15,
  name: "Customer Name 3",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00842150
  id: 16,
  name: "Customer Name 4",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00842088
  id: 17,
  name: "Customer Name 5",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841fc0
  id: 18,
  name: "Customer Name 6",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841ef8
  id: 19,
  name: "Customer Name 7",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841e30
  id: 20,
  name: "Customer Name 8",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841d68
  id: 21,
  name: "Customer Name 9",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841ca0
  id: 35,
  name: "Jas",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841bd8
  id: 1,
  name: "Jaskaran Singh",
  address: "#Sector 20-A Chandigarh",
  gender: "Male",
  mobile: "9876573100",
  updated_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00841a48
  id: 31,
  name: "Sam",
  address: "Faridabad",
  gender: nil,
  mobile: "9876573100",
  check_in: Tue, 10 May 2022,
  check_out: Sat, 14 May 2022,
  created_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  updated_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e00841980
  id: 2,
  name: "Sam Sharma",
  address: "Sector 30,Mumbai",
  gender: "Male",
  mobile: "21313241",
  check_in: Wed, 11 May 2022,
  check_out: Sun, 22 May 2022,
  created_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  updated_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e008418b8
  id: 32,
  name: "Uchiha",
  address: "chd",
  gender: nil,
  mobile: "9876573100",
  check_in: Thu, 05 May 2022,
  check_out: Tue, 10 May 2022,
  created_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
  country: "india",
  email: nil>] 
3.0.0 :023 > Customer.order(name: :desc)
  Customer Load (0.8ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."name" DESC
 =>                                                                                         
[#<Customer:0x00007f9e0083a568                                                              
  id: 32,                                                                                   
  name: "Uchiha",                                                                           
  address: "chd",                                                                           
  gender: nil,                                                                              
  mobile: "9876573100",                                                                     
  check_in: Thu, 05 May 2022,                                                               
  check_out: Tue, 10 May 2022,                                                              
  created_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,                               
  updated_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,                               
  country: "india",                                                                         
  email: nil>,                                                                              
 #<Customer:0x00007f9e0083a478                                                              
  id: 2,
  name: "Sam Sharma",
  address: "Sector 30,Mumbai",
  gender: "Male",
  mobile: "21313241",
  check_in: Wed, 11 May 2022,
  check_out: Sun, 22 May 2022,
  created_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  updated_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e0083a388
  id: 31,
  name: "Sam",
  address: "Faridabad",
  gender: nil,
  mobile: "9876573100",
  check_in: Tue, 10 May 2022,
  check_out: Sat, 14 May 2022,
  created_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  updated_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e0083a270
  id: 27,
  name: "John Doe",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  updated_at: Fri, 27 May 2022 10:14:19.192182000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e0083a130
  id: 1,
  name: "Jaskaran Singh",
  address: "#Sector 20-A Chandigarh",
  gender: "Male",
  mobile: "9876573100",
  check_in: Sun, 01 May 2022,
  check_out: Tue, 10 May 2022,
  created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
  updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007f9e0083a018
  id: 35,
  name: "Jas",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839f28
  id: 21,
  name: "Customer Name 9",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.135231000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839e60
  id: 20,
  name: "Customer Name 8",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.134360000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839d70
  id: 19,
  name: "Customer Name 7",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.133470000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839c80
  id: 18,
  name: "Customer Name 6",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.132452000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839b90
  id: 17,
  name: "Customer Name 5",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130879000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839aa0
  id: 16,
  name: "Customer Name 4",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.130147000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e008399b0
  id: 15,
  name: "Customer Name 3",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.129388000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e008398e8
  id: 14,
  name: "Customer Name 2",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.128563000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e008397f8
  id: 22,
  name: "Customer Name 10",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.136111000 UTC +00:00,
  country: nil,
  email: nil>,
 #<Customer:0x00007f9e00839708
  id: 13,
  name: "Customer Name 1",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  country: nil,
  email: nil>] 
3.0.0 :024 > 


Retrieving a Single Object
1.find -
3.0.0 :001 > customer = Customer.find(1)
  Customer Load (0.9ms)  SELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2  [["id", 1], ["LIMIT", 1]]                             
 =>                                                                        
#<Customer:0x00007fe21c77fd20                                              
...   

3.0.0 :007 > customer = Customer.find([1, 35])
  Customer Load (0.8ms)  SELECT "customers".* FROM "customers" WHERE "customers"."id" IN ($1, $2)  [["id", 1], ["id", 35]]             
 =>                                                    
[#<Customer:0x00005625059da3e8
... 

2.take -
The take method retrieves a record without any implicit ordering. 
3.0.0 :012 > customer = Customer.take
  Customer Load (0.7ms)  SELECT "customers".* FROM "customers" LIMIT $1  [["LIMIT", 1]]                               
 => 
#<Customer:0x00005625053c20a0
... 
3.0.0 :013 > customer
 => 
#<Customer:0x00005625053c20a0         
 id: 1,
 name: "Jaskaran Singh",
 address: "#Sector 20-A Chandigarh",
 gender: "Male",
 mobile: "9876573100",
 check_in: Sun, 01 May 2022,
 check_out: Tue, 10 May 2022,
 created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
 updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
 country: "India",
 email: nil>
 
 3.0.0 :017 > customer = Customer.take(3)
  Customer Load (0.6ms)  SELECT "customers".* FROM "customers" LIMIT $1  [["LIMIT", 3]]
 => 
[#<Customer:0x0000562505ae8578
... 
3.0.0 :018 > customer
 => 
[#<Customer:0x0000562505ae8578
  id: 1,                      
  name: "Jaskaran Singh",     
  address: "#Sector 20-A Chandigarh",
  gender: "Male",             
  mobile: "9876573100",       
  check_in: Sun, 01 May 2022, 
  check_out: Tue, 10 May 2022,
  created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
  updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
  country: "India",           
  email: nil>,                
 #<Customer:0x0000562505ae84b0
  id: 2,                      
  name: "Sam Sharma",
  address: "Sector 30,Mumbai",
  gender: "Male",
  mobile: "21313241",
  check_in: Wed, 11 May 2022,
  check_out: Sun, 22 May 2022,
  created_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  updated_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x0000562505ae83e8
  id: 13,
  name: "Customer Name 1",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  country: nil,
  email: nil>] 

3 first
The first method finds the first record ordered by primary key (default). 
 3.0.0 :019 > customer = Customer.first
  Customer Load (0.6ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."id" ASC LIMIT $1  [["LIMIT", 1]]                                      
 =>                                                                        
#<Customer:0x0000562505bdbf20                                              
...                                                                        
3.0.0 :020 > customer
 => 
#<Customer:0x0000562505bdbf20                                              
 id: 1,                                                                    
 name: "Jaskaran Singh",                                                   
 address: "#Sector 20-A Chandigarh",                                       
 gender: "Male",                                                           
 mobile: "9876573100",                                                     
 check_in: Sun, 01 May 2022,                                               
 check_out: Tue, 10 May 2022,                                              
 created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
 updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
 country: "India",            
 email: nil> 
 
 3.0.0 :021 > customer = Customer.first(3)
  Customer Load (0.4ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."id" ASC LIMIT $1  [["LIMIT", 3]]               
 =>                                                 
[#<Customer:0x00007fe21ca64400                      
...         
0.0 :022 > customer
 => 
[#<Customer:0x00007fe21ca64400
  id: 1,                      
  name: "Jaskaran Singh",     
  address: "#Sector 20-A Chandigarh",
  gender: "Male",             
  mobile: "9876573100",       
  check_in: Sun, 01 May 2022, 
  check_out: Tue, 10 May 2022,
  created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,
  updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
  country: "India",           
  email: nil>,                
 #<Customer:0x00007fe21ca64338
  id: 2,                      
  name: "Sam Sharma",
  address: "Sector 30,Mumbai",
  gender: "Male",
  mobile: "21313241",
  check_in: Wed, 11 May 2022,
  check_out: Sun, 22 May 2022,
  created_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  updated_at: Tue, 24 May 2022 12:49:28.509835000 UTC +00:00,
  country: "India",
  email: nil>,
 #<Customer:0x00007fe21ca64248
  id: 13,
  name: "Customer Name 1",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  updated_at: Tue, 24 May 2022 17:16:06.127119000 UTC +00:00,
  country: nil,
  email: nil>] 
  
  4.last - The last method finds the last record ordered by primary key (default). 
  3.0.0 :028 > customer = Customer.last
  Customer Load (0.7ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."id" DESC LIMIT $1  [["LIMIT", 1]]
 =>                                                                        
#<Customer:0x0000562505aeb1b0                                              
...                                                                        
3.0.0 :029 > customer
 => 
#<Customer:0x0000562505aeb1b0                                              
 id: 35,                                                                   
 name: "Jas",  
 
 3.0.0 :030 > customer = Customer.last(3)
  Customer Load (0.7ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."id" DESC LIMIT $1  [["LIMIT", 3]]
 =>                                   
[#<Customer:0x00005625053c2de8
... 
3.0.0 :031 > customer
 => 
[#<Customer:0x00005625053c2de8
  id: 31,                     
  name: "Sam",                
  address: "Faridabad",       
  gender: nil,                
  mobile: "9876573100",       
  check_in: Tue, 10 May 2022, 
  check_out: Sat, 14 May 2022,
  created_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  updated_at: Tue, 31 May 2022 10:57:14.180986000 UTC +00:00,
  country: "India",           
  email: nil>,                
 #<Customer:0x00005625053c2eb0
  id: 32,                     
  name: "Uchiha",
  address: "chd",
  gender: nil,
  mobile: "9876573100",
  check_in: Thu, 05 May 2022,
  check_out: Tue, 10 May 2022,
  created_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
  country: "india",
  email: nil>,
 #<Customer:0x00005625053c2f78
  id: 35,
  name: "Jas",
  address: nil,
  gender: nil,
  mobile: nil,
  check_in: nil,
  check_out: nil,
  created_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  updated_at: Tue, 31 May 2022 12:58:41.611610000 UTC +00:00,
  country: nil,
  email: nil>] 

3.0.0 :032 > customer = Customer.order(:name).last
  Customer Load (0.2ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."name" DESC LIMIT $1  [["LIMIT", 1]]
 =>                                                                                              
#<Customer:0x00005625056a2900                                                                    
...                                                                                              
3.0.0 :033 > customer
 => 
#<Customer:0x00005625056a2900                                                                    
 id: 32,                                                                                         
 name: "Uchiha",                                                                                 
 address: "chd",                                                                                 
 gender: nil,                                                                                    
 mobile: "9876573100",                                                                           
 check_in: Thu, 05 May 2022,                                                                     
 check_out: Tue, 10 May 2022,                                                                    
 created_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,                                     
 updated_at: Tue, 31 May 2022 12:50:22.377050000 UTC +00:00,
 country: "india",            
 email: nil>                  
3.0.0 :034 > customer = Customer.order(:name).first
  Customer Load (0.7ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."name" ASC LIMIT $1  [["LIMIT", 1]]
 =>       
 
 5.find_by ->
 3.0.0 :038 > Customer.find_by name: 'Jaskaran Singh'
  Customer Load (0.8ms)  SELECT "customers".* FROM "customers" WHERE "customers"."name" = $1 LIMIT $2  [["name", "Jaskaran Singh"], ["LIMIT", 1]]
 =>                                                               
#<Customer:0x0000562505b518c0                                     
 id: 1,                                                           
 name: "Jaskaran Singh",                                          
 address: "#Sector 20-A Chandigarh",                              
 gender: "Male",                                                  
 mobile: "9876573100",                                            
 check_in: Sun, 01 May 2022,                                      
 check_out: Tue, 10 May 2022,                                     
 created_at: Mon, 23 May 2022 10:03:11.423908000 UTC +00:00,      
 updated_at: Mon, 23 May 2022 10:05:42.660282000 UTC +00:00,
 country: "India",
 email: nil>
 
 3.0.0 :039 > Customer.find_by name: 'Ram'
  Customer Load (0.4ms)  SELECT "customers".* FROM "customers" WHERE "customers"."name" = $1 LIMIT $2  [["name", "Ram"], ["LIMIT", 1]]
 => nil 
 
 Retrieving Multiple Objects in Batches - 
 
 When you call #each, all records will be loaded into memory. When you call #find_each, records will be loaded into memory in batches of the given batch size.

So when your query returns a number of records that would be too much memory for the server's available resources, then using #find_each would be a great choice.

ActiveRecord::Batches provides public methods like find_each, find_in_batches and in_batches to work with the records in batches which helps in reducing memory consumption.

1.find_Each - 

3.0.0 :004 > Book.find_each do |book|
3.0.0 :005 >   puts "#{book.title}"
3.0.0 :006 > end
  Book Load (0.5ms)  SELECT "books".* FROM "books" ORDER BY "books"."id" ASC LIMIT $1  [["LIMIT", 1000]]
Rich Dad Poor Dad
IT
The Shining
Harry Potter
Firestarter
 => nil 

Options for find_Each - 
1.batch_size : The :batch_size option allows you to specify the number of records to be retrieved in each batch, before being passed individually to the block.
3.0.0 :086 > Customer.find_each(batch_size: 5) do |customer|
3.0.0 :087 >   puts "#{customer.name}"
3.0.0 :088 > end
  Customer Load (0.3ms)  SELECT "customers".* FROM "customers" ORDER BY "customers"."id" ASC LIMIT $1  [["LIMIT", 5]]
Jaskaran Singh                                                              
Sam Sharma                                                                  
Customer Name 1                                                             
Customer Name 2                                                             
Customer Name 3                                                             
  Customer Load (0.2ms)  SELECT "customers".* FROM "customers" WHERE "customers"."id" > $1 ORDER BY "customers"."id" ASC LIMIT $2  [["id", 15], ["LIMIT", 5]]
Customer Name 4                                                             
Customer Name 5                                                             
Customer Name 6                                                             
Customer Name 7                                                             
Customer Name 8                                                             
  Customer Load (0.2ms)  SELECT "customers".* FROM "customers" WHERE "customers"."id" > $1 ORDER BY "customers"."id" ASC LIMIT $2  [["id", 20], ["LIMIT", 5]]
Customer Name 9                                                             
Customer Name 10
John Doe
Sam
Uchiha
  Customer Load (0.2ms)  SELECT "customers".* FROM "customers" WHERE "customers"."id" > $1 ORDER BY "customers"."id" ASC LIMIT $2  [["id", 32], ["LIMIT", 5]]
Jas
 => nil 

2.start:
By default, records are fetched in ascending order of the primary key. The :start option allows you to configure the first ID of the sequence whenever the lowest ID is not the one you need.

3.0.0 :098 > Customer.find_each(start:30) do |customer|
3.0.0 :099 >   puts "#{customer.name}"
3.0.0 :100 > end
  Customer Load (0.2ms)  SELECT "customers".* FROM "customers" WHERE "customers"."id" >= $1 ORDER BY "customers"."id" ASC LIMIT $2  [["id", 30], ["LIMIT", 1000]]
Sam
Uchiha
Jas
 => nil 

3.finish - 
3.0.0 :016 > Book.find_each(start:2, finish: 10) do |book|
3.0.0 :017 >   puts "#{book.title}"
3.0.0 :018 > end
  Book Load (0.7ms)  SELECT "books".* FROM "books" WHERE "books"."id" >= $1 AND "books"."id" <= $2 ORDER BY "books"."id" ASC LIMIT $3  [["id", 2], ["id", 10], ["LIMIT", 1000]]                                                       
Rich Dad Poor Dad                                                     
1234                                                                  
3242334                                                               
                                                                      
                                                                      
 => nil   
 
 4.error_on_ignore - 
 Overrides the application config to specify if an error should be raised when an order is present in the relation.
 
 
