What is a Database?
A database is information that is set up for easy access, management and updating.Databases are used for storing, maintaining and accessing any sort of data. They collect information on people, places or things. That information is gathered in one place so that it can be observed and analyzed. Databases can be thought of as an organized collection of information.

PostgreSql-
It is a powerful, open source object-relational database system.PostgreSQL runs on all major operating systems.PostgreSQL supports a large part of the SQL standard.
It is a highly stable database management system, backed by more than 20 years of community development which has contributed to its high levels of resilience, integrity, and correctness.
It uses the SQL language.


postgres=# select version();
                          version
------------------------------------------------------------
 PostgreSQL 14.2, compiled by Visual C++ build 1914, 64-bit
(1 row)

postgres-# \l
                                         List of databases
   Name    |  Owner   | Encoding |      Collate       |       Ctype        |   Access privileges
-----------+----------+----------+--------------------+--------------------+-----------------------
 postgres  | postgres | UTF8     | English_India.1252 | English_India.1252 |
 template0 | postgres | UTF8     | English_India.1252 | English_India.1252 | =c/postgres          +
           |          |          |                    |                    | postgres=CTc/postgres
 template1 | postgres | UTF8     | English_India.1252 | English_India.1252 | =c/postgres          +
           |          |          |                    |                    | postgres=CTc/postgres
(3 rows)


postgres=# create database test;
CREATE DATABASE

test-#
Here # shows I am Super User
test=>
" => " have rights to the database

postgres-# \?
General
  \copyright             show PostgreSQL usage and distribution terms
  \crosstabview [COLUMNS] execute query and display results in crosstab
  \errverbose            show most recent error message at maximum verbosity
  \g [(OPTIONS)] [FILE]  execute query (and send results to file or |pipe);
                         \g with no arguments is equivalent to a semicolon
  \gdesc                 describe result of query, without executing it
  \gexec                 execute query, then execute each value in its result
  \gset [PREFIX]         execute query and store results in psql variables
  \gx [(OPTIONS)] [FILE] as \g, but forces expanded output mode
  \q                     quit psql
  \watch [SEC]           execute query every SEC seconds

Help
  \? [commands]          show help on backslash commands
  \? options             show help on psql command-line options
  \? variables           show help on special variables
  \h [NAME]              help on syntax of SQL commands, * for all commands

Query Buffer
  \e [FILE] [LINE]       edit the query buffer (or file) with external editor
  \ef [FUNCNAME [LINE]]  edit function definition with external editor
  \ev [VIEWNAME [LINE]]  edit view definition with external editor
  \p                     show the contents of the query buffer
  \r                     reset (clear) the query buffer
  \w FILE                write query buffer to file

Input/Output
  \copy ...              perform SQL COPY with data stream to the client host
-- More  --


#To see current date
# select current_date;
 current_date
--------------
 2022-04-01


#running an arithmetic operation
postgres=# select 2+2;
 ?column?
----------
        4
(1 row)

#to permanently delete a database;
 drop database test1;
DROP DATABASE

#to change database
test=# \c test1;
You are now connected to database "test1" as user "postgres".


Table synatx - 

CREATE TABLE table_name(
Column name + data type + constraints if any
)

test=# create table person (
test(# id int not null primary key,
test(# first_name varchar(50) not null,
test(# last_name varchar(50) not null,
test(# gender varchar(7) not null,
test(# date_of_birth date not null,
test(# email varchar(150)  );
CREATE TABLE


#to view table
test=# \d
         List of relations
 Schema |  Name  | Type  |  Owner
--------+--------+-------+----------
 public | person | table | postgres
(1 row)



test=# \d person;
                          Table "public.person"
    Column     |          Type          | Collation | Nullable | Default
---------------+------------------------+-----------+----------+---------
 id            | integer                |           | not null |
 first_name    | character varying(50)  |           | not null |
 last_name     | character varying(50)  |           | not null |
 gender        | character varying(7)   |           | not null |
 date_of_birth | date                   |           | not null |
 email         | character varying(150) |           |          |
Indexes:
    "person_pkey" PRIMARY KEY, btree (id)


#to delete a table
test=# drop table person;
DROP TABLE


test=# \dt
         List of relations
 Schema |  Name  | Type  |  Owner
--------+--------+-------+----------
 public | person | table | postgres
(1 row)


#inserting values into table

test=# insert into person (id, first_name, last_name, gender, date_of_birth)
test-# values(1,'John','Smith','Male',date '2000-11-04');
INSERT 0 1
test=# insert into person (id, first_name,last_name, gender, date_of_birth, email)
test-# values(2,'Jessica','Jones','Female',date '1999-05-05','jessica@gmail.com');
INSERT 0 1
test=# insert into person (id,first_name,last_name,gender,date_of_birth,email)
test-# values(3,'David','Ayers','Male',date '1999=06-07','david@gmail.com');
INSERT 0 1
test=# insert into person (id,first_name,last_name,gender,date_of_birth,email)
test-# values(4,'Chris','Evans','Male',date '1998-07-11','chris@gmail.com');
INSERT 0 1
test=# insert into person (id,first_name,last_name,gender,date_of_birth,email)
test-# values(5,'Hela','Ray','Female',date '1996-09-12','hela@gmail.com');
INSERT 0 1


 SELECT statement is used to fetch the data from a database table,
test=# select * from person;
 id | first_name | last_name | gender | date_of_birth |       email
----+------------+-----------+--------+---------------+-------------------
  1 | John       | Smith     | Male   | 2000-11-04    | john@gmail.com
  2 | Jessica    | Jones     | Female | 1999-05-05    | jessica@gmail.com
  3 | David      | Ayers     | Male   | 1999-06-07    | david@gmail.com
  4 | Chris      | Evans     | Male   | 1998-07-11    | chris@gmail.com
  5 | Hela       | Ray       | Female | 1996-09-12    | hela@gmail.com
(5 rows)


test=# select first_name, last_name from person;
 first_name | last_name
------------+-----------
 John       | Smith
 Jessica    | Jones
 David      | Ayers
 Chris      | Evans
 Hela       | Ray
(5 rows)


test=# select * from person order by first_name;
 id | first_name | last_name | gender | date_of_birth |       email
----+------------+-----------+--------+---------------+-------------------
  4 | Chris      | Evans     | Male   | 1998-07-11    | chris@gmail.com
  3 | David      | Ayers     | Male   | 1999-06-07    | david@gmail.com
  5 | Hela       | Ray       | Female | 1996-09-12    | hela@gmail.com
  2 | Jessica    | Jones     | Female | 1999-05-05    | jessica@gmail.com
  1 | John       | Smith     | Male   | 2000-11-04    | john@gmail.com
(5 rows)



test=# select * from person order by id DESC;
 id | first_name | last_name | gender | date_of_birth |       email
----+------------+-----------+--------+---------------+-------------------
  5 | Hela       | Ray       | Female | 1996-09-12    | hela@gmail.com
  4 | Chris      | Evans     | Male   | 1998-07-11    | chris@gmail.com
  3 | David      | Ayers     | Male   | 1999-06-07    | david@gmail.com
  2 | Jessica    | Jones     | Female | 1999-05-05    | jessica@gmail.com
  1 | John       | Smith     | Male   | 2000-11-04    | john@gmail.com
(5 rows)



test=# select * from person where gender='Female';
 id | first_name | last_name | gender | date_of_birth |       email
----+------------+-----------+--------+---------------+-------------------
  2 | Jessica    | Jones     | Female | 1999-05-05    | jessica@gmail.com
  5 | Hela       | Ray       | Female | 1996-09-12    | hela@gmail.com



test=# SELECT 1<2;
 ?column?
----------
 t
(1 row)

 Select * from person where last_name in ('Jones','Evans','Ray');
 id | first_name | last_name | gender | date_of_birth |       email
----+------------+-----------+--------+---------------+-------------------
  2 | Jessica    | Jones     | Female | 1999-05-05    | jessica@gmail.com
  4 | Chris      | Evans     | Male   | 1998-07-11    | chris@gmail.com
  5 | Hela       | Ray       | Female | 1996-09-12    | hela@gmail.com
(3 rows)


