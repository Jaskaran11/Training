Linux is an open-source operating system. It is like Windows, Mac, Android, etc.

Unix is also an operating system like Linux. It is an commercial OS. It consists of three parts: Kernal, Shell and Programs. Most of the Unix and Linux commands are similar in nature.

Linux kernel is a low-level system software.It provides an interface for user-level interaction.
It manages the system resources such as RAM,Disk,Processor, output devices etc.



Basic commands

Name - create a folder
purpose - creation of folder
itsacheckmate@itscheckmate:~$ mkdir linuxfolder
itsacheckmate@itscheckmate:~$ ls
Desktop    Downloads    Music     Public  temp   temp2      temporary  Training
Documents  linuxfolder  Pictures  snap    temp1  Templates  temp.txt   Videos

mkdir -v - displays message for every directory created
itsacheckmate@itscheckmate:~$ mkdir -v linuxtemp
mkdir: created directory 'linuxtemp'

-p flag => enables commands to create parent directory as necessary
itsacheckmate@itscheckmate:~$ mkdir -v -p a/b/c
mkdir: created directory 'a'
mkdir: created directory 'a/b'
mkdir: created directory 'a/b/c'

-m option => It is used to set the file mode/permission of the folder created
itsacheckmate@itscheckmate:~$ mkdir -m a=rx abc
itsacheckmate@itscheckmate:~$ mkdir -v -m o=r abcd
mkdir: created directory 'abcd'

-----------------------------------------------------------

Name - Change Directory
purpose navigate the directory in the linux terminal
itsacheckmate@itscheckmate:~$ cd Desktop

cd ~ => used to change the directory to home directory
tsacheckmate@itscheckmate:~/Desktop$ cd ~
itsacheckmate@itscheckmate:~$ 
cd .. => goes one directory back
d "dir name" or cd dir\ name => this used to navigate to the directory with the white spaces

-------------------------------------------------------------

Name -       Delete Folder
Purpose-  Deletes the folder  
Examples- rmdir is used to remove the emplty folder  
-p =>option each of the directory argument is treated as a pathname of which all
 components will be removed, if they are already empty, starting from the last component
-v/-verbose => this option will show the verbose info
–ignore-fail-on-non-empty => this option will not report failure if the direcotry is not empty

itsacheckmate@itscheckmate:~$ rmdir linuxfolder

itsacheckmate@itscheckmate:~$ rmdir ab
itsacheckmate@itscheckmate:~$ rmdir ab
rmdir: failed to remove 'ab': No such file or directory
itsacheckmate@itscheckmate:~$ rmdir -v a
rmdir: removing directory, 'a'
rmdir: failed to remove 'a': Directory not empty(only remove empty)

--------------------------------------------------------

rm - it is the remove command which deletes the objects such as files,directories , symbolic links etc.And, if the command has been executed it cant be undone.
itsacheckmate@itscheckmate:~$ rm temp.txt

rm -i=> this asks before deleting the file
itsacheckmate@itscheckmate:~$ rm -i temp1
rm: remove regular empty file 'temp1'?
rm -f a.txt => if the file is write protected it foces to delete it but wont work in the write protected directories
-r (recursive option) - it will perform a tree-walk and will delete all the files and sub-directories recursively normally rm donot delete directory but using this option it will delete the directory.

--------------------------------------
Rename Folder
Purpose-   Rename the named files according to regular expression perlexpr, can change name of multiple files
rename -s => it is going to ingnore the symbolic links
rename -v => verbose will show the files which is being renamed
rename -n=>if the user want  to see only final change
rename -o =>will not overwrite existing files
rename -V => shows the version
rename -help=> help message and exit

rename [options] expression replacement file...

itsacheckmate@itsacheckmate:~/Training/Linux/practice$ rename -v 's/a1/b' a.txt
Substitution replacement not terminated at (user-supplied code).
itsacheckmate@itsacheckmate:~/Training/Linux/practice$ rename -v 's/a1/b/' a.txt
itsacheckmate@itsacheckmate:~/Training/Linux/practice$ ls
a1.txt  aa1.txt  aa.txt  a.txt
itsacheckmate@itsacheckmate:~/Training/Linux/practice$ rename -v 's/a1/b/' a1.txt
a1.txt renamed as b.txt
itsacheckmate@itsacheckmate:~/Training/Linux/practice$ rename -n 's/a*/b/' a1.txt
rename(a1.txt, b1.txt)
itsacheckmate@itsacheckmate:~/Training/Linux/practice$ rename -n 's/a*/b/' *.txt
rename(aa1.txt, b1.txt)
aa.txt not renamed: b.txt already exists
a.txt not renamed: b.txt already exists
rename(b.txt, bb.txt)
itsacheckmate@itsacheckmate:~/Training/Linux/practice$ ls
aa1.txt  aa.txt  a.txt  b.txt

-----------------------------------------------
Moving
mv stands for move. mv is used to move one or more files or directories from one place to another in a file system like UNIX. It has two distinct functions: 
(i) It renames a file or folder. 
(ii) It moves a group of files to a different directory. 

mv [Option] source destination
options 
-i =interactive it just ask for user confirmation 
-f = force moves the write protected files or the write protected destination file
-n = no clobber  prevents the overwriting of the existing files
-b = backup creates the backup of the existing file that is going to be overwritten

itsacheckmate@itscheckmate:~$ mv a geek.txt

itsacheckmate@itscheckmate:~$ mv -n abc geek.txt
mv: cannot move 'abc' to 'geek.txt/abc': Permission denied

itsacheckmate@itsacheckmate:~ mv -b b.txt geek.txt
itsacheckmate@itsacheckmate:~ls
aa1.txt  aa.txt  geek.txt  geek.txt~
itsacheckmate@itsacheckmate:~ mv -i aa.txt geek.txt
mv: overwrite 'geek.txt'? n
itsacheckmate@itsacheckmate:~ ls
aa1.txt  aa.txt  geek.txt  geek.txt~

------------------------------------------

Copy
cp stands for copy. This command is used to copy files or group of files or directory. It creates an exact image of a file on a disk with different file name. cp command require at least two filenames in its arguments.
-r = recursive copying used to copy directory and all the files in it to other directory
-i = interactive with this option it asks the user confirmation
-b = backup creates the destination file backup in the same folder but different name and formats
-f = force used to copy write protected destination files 
-p = preserve it preserves the chracteristics of the souce file int destination like last modification date and time
itsacheckmate@itscheckmate:~/Practise$ touch a.txt
itsacheckmate@itscheckmate:~/Practise$ cp a.txt b.txt
itsacheckmate@itscheckmate:~/Practise$ ls
a.txt  b.txt

itsacheckmate@itscheckmate:~/Practise$ cp -i a.txt b.txt
cp: overwrite 'b.txt'? y
itsacheckmate@itscheckmate:~/Practise$ cat b.txt
HI
itsacheckmate@itscheckmate:~/Practise$ cp -b a.txt b.txt
itsacheckmate@itscheckmate:~/Practise$ ls
a.txt  b.txt  b.txt~
$ ls -l b.txt
-r-xr-xr-x+ 1 User User 3 Nov 24 08:45 b.txt

User, group and others doesn't have writing permission.

Without -f option, command not executed
$ cp a.txt b.txt
cp: cannot create regular file 'b.txt': Permission denied

With -f option, command executed successfully
$ cp -f a.txt b.txt
root@itscheckmate:/home/itsacheckmate/Practise# ls -l a.txt
-rw-rw-r-- 1 itsacheckmate itsacheckmate 3 Apr 20 13:58 a.txt
root@itscheckmate:/home/itsacheckmate/Practise# cp -p a.txt c.txt
root@itscheckmate:/home/itsacheckmate/Practise# ls -l c.txt
-rw-rw-r-- 1 itsacheckmate itsacheckmate 3 Apr 20 13:58 c.txt


-----------------------------------------

#System Information
uname -a (Display Linux system information)
Linux itscheckmate 5.13.0-39-generic #44~20.04.1-Ubuntu SMP Thu Mar 24 16:43:35 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

uname -r (Display kernel release information)
5.13.0-39-generic

uptime (Shows how long the system is running + load uptime)
 14:11:49 up  1:32,  1 user,  load average: 0.49, 0.41, 0.45

hostname (Shows system host name)
itscheckmate

hostname -I (Display all local IP addresses of the host)
192.168.11.104 

last reboot (Shows system reboot system)
reboot   system boot  5.13.0-39-generi Tue Apr 19 12:39   still running
reboot   system boot  5.11.0-27-generi Tue Apr 19 22:24 - 12:39  (-9:44)
reboot   system boot  5.11.0-27-generi Fri Apr 15 00:15 - 00:16  (00:01)
reboot   system boot  5.11.0-27-generi Thu Apr 14 23:18 - 23:24  (00:05)

wtmp begins Thu Apr 14 23:18:30 2022

date (shows the current date and time)
Tuesday 19 April 2022 02:16:42 PM IST

 cal (Shows this months calendar)
     April 2022       
Su Mo Tu We Th Fr Sa  
                1  2  
 3  4  5  6  7  8  9  
10 11 12 13 14 15 16  
17 18 19 20 21 22 23  
24 25 26 27 28 29 30  

w (Display who is online)
 14:18:23 up  1:38,  1 user,  load average: 0.29, 0.27, 0.36
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
itsachec :0       :0               12:39   ?xdm?  17:05   0.00s /usr/lib/gdm3/g

 whoami (who you are logged in)
itsacheckmate

--------------------------------------------

Name -       ls
Purpose-    lists all the files int the present working directory
ls commands
ls (displays directories and files visible under pwd)
Desktop    Downloads  Pictures  snap       Training
Documents  Music      Public    Templates  Videos

ls -R(it goes a step further to display files in sub-directories of the pwd)
.:
Desktop    Downloads  Pictures  snap       Training
Documents  Music      Public    Templates  Videos

./Desktop:

./Documents:

./Downloads:
slack-desktop-4.25.0-amd64.deb

./Music:

./Pictures:

./Public:

./snap:
snap-store

./snap/snap-store:
547  558  common  current

./snap/snap-store/547:

./snap/snap-store/558:

./snap/snap-store/common:

./Templates:

./Training:
 Git   linux   postgresql   README.md  'Untitled Diagram.drawio'

./Training/Git:
commands.txt

./Training/linux:
commands.txt

./Training/postgresql:
 AttendanceManagement.txt  'ER Diagram of AMS.drawio.png'
 commands.txt              'InBuilt Functions.txt'

./Videos:

 ls -a (displays hidden files in pwd)
.              .cache     .gitconfig  Pictures  .ssh
..             .config    .gnupg      .pki      .sudo_as_admin_successful
.bash_history  Desktop    .local      .profile  Templates
.bash_logout   Documents  .mozilla    Public    Training
.bashrc        Downloads  Music       snap      Videos

ls -al (it gives a detailed list ofthe displayed files and directories with extra information such as size etc)
total 96
drwxr-xr-x 19 itsacheckmate itsacheckmate 4096 Apr 19 13:11 .
drwxr-xr-x  3 root          root          4096 Apr 14 17:46 ..
-rw-------  1 itsacheckmate itsacheckmate  540 Apr 19 13:10 .bash_history
-rw-r--r--  1 itsacheckmate itsacheckmate  220 Apr 14 17:46 .bash_logout
-rw-r--r--  1 itsacheckmate itsacheckmate 3771 Apr 14 17:46 .bashrc
drwxrwxr-x 14 itsacheckmate itsacheckmate 4096 Apr 19  2022 .cache
drwx------ 13 itsacheckmate itsacheckmate 4096 Apr 19 13:37 .config
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Desktop
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Documents
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 19 12:44 Downloads
-rw-rw-r--  1 itsacheckmate itsacheckmate   63 Apr 19 13:00 .gitconfig
drwx------  3 itsacheckmate itsacheckmate 4096 Apr 19 13:57 .gnupg
drwxr-xr-x  3 itsacheckmate itsacheckmate 4096 Apr 14 23:18 .local
drwx------  5 itsacheckmate itsacheckmate 4096 Apr 19  2022 .mozilla
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Music
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Pictures
drwx------  3 itsacheckmate itsacheckmate 4096 Apr 19 12:46 .pki
-rw-r--r--  1 itsacheckmate itsacheckmate  807 Apr 14 17:46 .profile
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Public
drwx------  3 itsacheckmate itsacheckmate 4096 Apr 19 12:27 snap
drwx------  2 itsacheckmate itsacheckmate 4096 Apr 19 13:08 .ssh
-rw-r--r--  1 itsacheckmate itsacheckmate    0 Apr 19 12:15 .sudo_as_admin_successful
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Templates
drwxrwxr-x  6 itsacheckmate itsacheckmate 4096 Apr 19 13:21 Training
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Videos


itsacheckmate@itscheckmate:~$ cd Downloads (to change directory)
itsacheckmate@itscheckmate:~/Downloads$ 

itsacheckmate@itscheckmate:~/Downloads$ cd (changes to the home directory)
itsacheckmate@itscheckmate:~$ 

itsacheckmate@itscheckmate:~$ cd / (takes you to the root directory of the linux os)
itsacheckmate@itscheckmate:/$ 

itsacheckmate@itscheckmate:~$ cat > temp.txt (create a file called temp)

itsacheckmate@itscheckmate:~$ cat temp.txt (display the contents of the file)
hello , wassup!

itsacheckmate@itscheckmate:~$ ls -l (Outputs the file and file permissions needed to access the target file)
total 48
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Desktop
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Documents
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 19 12:44 Downloads
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Music
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Pictures
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Public
drwx------ 3 itsacheckmate itsacheckmate 4096 Apr 19 12:27 snap
-rw-rw-r-- 1 itsacheckmate itsacheckmate    1 Apr 19 15:06 temp
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Templates
-rw-rw-r-- 1 itsacheckmate itsacheckmate   16 Apr 19 15:09 temp.txt
drwxrwxr-x 6 itsacheckmate itsacheckmate 4096 Apr 19 13:21 Training
drwxr-xr-x 2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Videos

itsacheckmate@itscheckmate:~$ sudo su - (to become the root user)

[sudo] password for itsacheckmate: 
root@itscheckmate:~# 

itsacheckmate@itscheckmate:~$ sudo su -
[sudo] password for itsacheckmate: 

root@itscheckmate:~# chown root / index.html
root@itscheckmate:~# ls
index.html  snap

root@itscheckmate:~# exit
logout
itsacheckmate@itscheckmate:~$ 

-------------------------------------------------------

Name -       Chmod
Purpose-      Change the access mode of the file i.e what user have the permission on the file 
wether they can edit it, or read or execute the file or the directory .

Reference   Class     Description
u          owner      file's owner

g          group      users who are members of
                      the file's group

o          others     users who are neither the
                      file's owner nor members of 
                      the file's group

a          all       All three of the above, same as ugo
Then there is operator which specify how the modes of files should be adjusted
Operator  Description
+         Adds the specified modes to the
          specified classes

-         Removes the specified modes from 
          the specified classes

=         The modes specified are to be made
          the exact modes for the specified 
          classes
and the the modes which indicate which permission is to be granted
r       Permission to read the file.
w       Permission to write (or delete) the file.
x       Permission to execute the file, or, in
        the case of a directory, search it.

the very first column represents the type of the file 
if its is a directory  'd' or if its a file the  '-'
then the folling 3set of letter represents the permission of the file owner
rwx =all three permission or rw- = only the read and write permission 

Then the following set off 3 letters are the group permission and other user permission
respectively 
if the directory has only x permission it means that there is premission to search the directory

root@itscheckmate:~# chmod 777 index.html (Everyone can access the file will have read,write and execute permissions)

chmod 755 - the owner will have read,write and execute permissions while other users will have only read and execute permissions -
root@itscheckmate:~# chmod 755 index.html 
root@itscheckmate:~# ls -l
total 4
-rwxr-xr-x 1 root root    0 Apr 19 15:30 index.html
drwxr-xr-x 3 root root 4096 Apr 14 23:18 snap

chmod 766 - sets permissions so that, owner can read, can write and can execute. (G)roup can read, can write and can't execute. (O)thers can read, can write and can't execute.
root@itscheckmate:~# chmod 766 index.html
root@itscheckmate:~# ls -l
total 4
-rwxrw-rw- 1 root root    0 Apr 19 15:30 index.html
drwxr-xr-x 3 root root 4096 Apr 14 23:18 snap

------------------------------------------------------------------

pwd - Prints working directory
It has 2 options 
		pwd -L: Prints the symbolic path. it is default command shwon by pwd 
					Also by the $pwd variable value is shown
		pwd -P: Prints the actual path.It is the path shown by /bin/pwd

itsacheckmate@itscheckmate:~$ pwd
/home/itsacheckmate
itsacheckmate@itscheckmate:~$ pwd -L
/home/itsacheckmate
itsacheckmate@itscheckmate:~$ pwd -P
/home/itsacheckmate

---------------------------------------------

Name -       shutdown
Purpose-    used to shutdown the system in a safe way.
Examples- syntax shutdown [OPTIONS] [TIME] [MESSAGE]
					sudo shutdown
					to shutdown the system at a specified time

It has 2 different formats
schedule a system shutdown at 7am:

tsacheckmate@itscheckmate:~$ sudo shutdown 7:00
[sudo] password for itsacheckmate: 
Shutdown scheduled for Wed 2022-04-20 07:00:00 IST, use 'shutdown -c' to cancel.

to broadcast a custom message-
itsacheckmate@itscheckmate:~$ sudo shutdown +10 "System upgrade"
Shutdown scheduled for Tue 2022-04-19 18:43:00 IST, use 'shutdown -c' to cancel.

this is to halt your system using -H option

shutdown -H
It means means stopping all CPUs and powering off also makes sure the main power is disconnected.
itsacheckmate@itscheckmate:~$ shutdown -h
Shutdown scheduled for Tue 2022-04-19 18:38:46 IST, use 'shutdown -c' to cancel.
itsacheckmate@itscheckmate:~$ means stopping all CPUs and powering off also makes sure the main power is disconnected.

sudo shutdown -c
 cannot specify a time argument, but can still broadcast a message 


shutdown -P
How to reboot using shutdown
For reboot, the option is -r.

itsacheckmate@itscheckmate:~$ sudo shutdown -c "cancelling the reboot of the system"

-------------------------------------------------------

Name-clear screen
It is used to clear the screen of the terminal.

--------------------------------------------------------

ps command - ps command is used to list the currently running processes and their PIDs along with some other information depends on different options.

itsacheckmate@itscheckmate:~$ ps
    PID TTY          TIME CMD
  19768 pts/1    00:00:00 bash
  33030 pts/1    00:00:00 ps



--------------------------------------------------

touch - The touch command is a standard command used in UNIX/Linux operating system which is used to create, change and modify timestamps of a file. It is used to create a file without any content.

itsacheckmate@itscheckmate:~$ touch temporary
itsacheckmate@itscheckmate:~$ ls
Desktop    Downloads  Pictures  snap  Templates  temp.txt  Videos
Documents  Music      Public    temp  temporary  Training

to create the multiple files
touch File1_name File2_name File3_name 

itsacheckmate@itscheckmate:~$ touch temp1 temp2
itsacheckmate@itscheckmate:~$ ls
Desktop    Downloads  Pictures  snap  temp1  Templates  temp.txt  Videos
Documents  Music      Public    temp  temp2  temporary  Training

touch -c : This command is used to check whether a file is created or not.
itsacheckmate@itscheckmate:~$ touch -c redhat
itsacheckmate@itscheckmate:~$ ls
Desktop    Downloads  Pictures  snap  temp1  Templates  temp.txt  Videos
Documents  Music      Public    temp  temp2  temporary  Training

touch -c-d : This is used to update access and modification time.
itsacheckmate@itscheckmate:~$ touch -c -d "17 April" temp1

touch -m : This is used to change the modification time only. It only updates last modification time.
itsacheckmate@itscheckmate:~$ touch -m temp1
itsacheckmate@itscheckmate:~$ ll
total 104
drwxr-xr-x 19 itsacheckmate itsacheckmate 4096 Apr 19 19:12 ./
drwxr-xr-x  3 root          root          4096 Apr 14 17:46 ../
-rw-------  1 itsacheckmate itsacheckmate  540 Apr 19 13:10 .bash_history
-rw-r--r--  1 itsacheckmate itsacheckmate  220 Apr 14 17:46 .bash_logout
-rw-r--r--  1 itsacheckmate itsacheckmate 3771 Apr 14 17:46 .bashrc
drwxrwxr-x 14 itsacheckmate itsacheckmate 4096 Apr 19  2022 .cache/
drwx------ 13 itsacheckmate itsacheckmate 4096 Apr 19 13:37 .config/
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Desktop/
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Documents/
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 19 12:44 Downloads/
-rw-rw-r--  1 itsacheckmate itsacheckmate   63 Apr 19 13:00 .gitconfig
drwx------  3 itsacheckmate itsacheckmate 4096 Apr 19 13:57 .gnupg/
drwxr-xr-x  3 itsacheckmate itsacheckmate 4096 Apr 14 23:18 .local/
drwx------  5 itsacheckmate itsacheckmate 4096 Apr 19  2022 .mozilla/
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Music/
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Pictures/
drwx------  3 itsacheckmate itsacheckmate 4096 Apr 19 12:46 .pki/
-rw-r--r--  1 itsacheckmate itsacheckmate  807 Apr 14 17:46 .profile
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Public/
drwx------  3 itsacheckmate itsacheckmate 4096 Apr 19 12:27 snap/
drwx------  2 itsacheckmate itsacheckmate 4096 Apr 19 13:08 .ssh/
-rw-r--r--  1 itsacheckmate itsacheckmate    0 Apr 19 12:15 .sudo_as_admin_successful
-rw-rw-r--  1 itsacheckmate itsacheckmate    1 Apr 19 15:06 temp
-rw-rw-r--  1 itsacheckmate itsacheckmate    0 Apr 19 19:18 temp1
-rw-rw-r--  1 itsacheckmate itsacheckmate    0 Apr 19 19:12 temp2
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Templates/
-rw-rw-r--  1 itsacheckmate itsacheckmate    0 Apr 19 19:11 temporary
-rw-rw-r--  1 itsacheckmate itsacheckmate   16 Apr 19 15:09 temp.txt
drwxrwxr-x  6 itsacheckmate itsacheckmate 4096 Apr 19 13:21 Training/
drwxr-xr-x  2 itsacheckmate itsacheckmate 4096 Apr 14 23:18 Videos/

touch -r : This command is used to use the timestamp of another file.
itsacheckmate@itscheckmate:~$ touch -r temp1 temp2
itsacheckmate@itscheckmate:~$ stat temp1
  File: temp1
  Size: 0         	Blocks: 0          IO Block: 4096   regular empty file
Device: 10305h/66309d	Inode: 1188051     Links: 1
Access: (0664/-rw-rw-r--)  Uid: ( 1000/itsacheckmate)   Gid: ( 1000/itsacheckmate)
Access: 2022-04-17 00:00:00.000000000 +0530
Modify: 2022-04-19 19:18:37.485721738 +0530
Change: 2022-04-19 19:18:37.485721738 +0530
 Birth: -
itsacheckmate@itscheckmate:~$ stat temp2
  File: temp2
  Size: 0         	Blocks: 0          IO Block: 4096   regular empty file
Device: 10305h/66309d	Inode: 1190609     Links: 1
Access: (0664/-rw-rw-r--)  Uid: ( 1000/itsacheckmate)   Gid: ( 1000/itsacheckmate)
Access: 2022-04-17 00:00:00.000000000 +0530
Modify: 2022-04-19 19:18:37.485721738 +0530
Change: 2022-04-19 19:19:29.041601731 +0530
 Birth: -

-------------------------------------------------------------


Name -       echo
Purpose-    Used to display line of text/string that are passed as an argument
Examples-  echo [option] [string]
options   -e -> to enable the interpretation of the blackslash escapes
 \b : it removes all the spaces in between the text
 \c : suppress trailing new line with backspace interpretor ‘-e‘ to continue without emitting new line.
In above example, text after \c is not printed and omitted trailing new line.
\n : this option creates new line from where it is used.
\t : this option is used to create horizontal tab spaces.
 \r : carriage return with backspace interpretor ‘-e‘ to have specified carriage return in output.
In the above example, text before \r is not printed.
\a : alert return with backspace interpretor ‘-e‘ to have sound alert.

This command when executed, it will produce an alert sound or Bel .
			 -n -> option is used to omit echoing triling newline
			 itsacheckmate@itsacheckmate:~/tmp$ echo -n "Geeks for Geeks"
Geeks for Geeksitsacheckmate@itsacheckmate:~/tmp$
			 echo * -> prints all the files and folder , similiar to ls
			 itsacheckmate@itsacheckmate:~/tmp$ echo *
git-2.35.3 git.tar.gz tmp

------------------------------------------------------------------

locate command in Linux is used to find the files by name. 
locate [OPTION]... PATTERN...
itsacheckmate@itscheckmate:/home$ locate sample.txt
/usr/share/perl5/auto/share/dist/File-ShareDir/sample.txt
/usr/share/perl5/auto/share/dist/File-ShareDir/subdir/sample.txt


----------------------------------------------------------------

history command is used to view the previously executed command. 

itsacheckmate@itscheckmate:/$ history 5
  224  cd /home
  225  locate sample.txt
  226  cd ..
  227  history
  228  history 5

the most recent command can be viewed using !!
history 5
  224  cd /home
  225  locate sample.txt
  226  cd ..
  227  history
  228  history 5

History can also be removed using history -d event_number
itsacheckmate@itscheckmate:/$ history 5
  224  cd /home
  225  locate sample.txt
  226  cd ..
  227  history
  228  history 5
itsacheckmate@itscheckmate:/$ history -d 224
itsacheckmate@itscheckmate:/$ history 5
  225  cd ..
  226  history
  227  history 5
  228  history -d 224
  229  history 5
itsacheckmate@itsch

The whole history can be removed using history -c option.
itsacheckmate@itscheckmate:/$ history -c
itsacheckmate@itscheckmate:/$ history
    1  history

---------------------------

echo command in linux is used to display line of text/string that are passed as an argument . 
echo [option] [string]
echo [string]
options   -e -> to enable the interpretation of the blackslash escapes
 \b : it removes all the spaces in between the text
 \c : suppress trailing new line with backspace interpretor ‘-e‘ to continue without emitting new line.
In above example, text after \c is not printed and omitted trailing new line.
\n : this option creates new line from where it is used.
\t : this option is used to create horizontal tab spaces.
 \r : carriage return with backspace interpretor ‘-e‘ to have specified carriage return in output.
In the above example, text before \r is not printed.
\a : alert return with backspace interpretor ‘-e‘ to have sound alert.


itsacheckmate@itscheckmate:~$ echo "itsacheckmate"
itsacheckmate
itsacheckmate@itscheckmate:~$ echo -e "Its \ba \bcheckmate"
Itsacheckmate
itsacheckmate@itscheckmate:~$ echo -e "Hello \cthere"
Hello itsacheckmate@itscheckmate:~$ echo -e "Hi \nthere \nwassup"
Hi 
there 
wassup
itsacheckmate@itscheckmate:~$ echo -e "Geeks \rfor Geeks"
for Geeks
itsacheckmate@itscheckmate:~$ echo *
abc abcd a.txt b.txt Desktop Documents Downloads geek.txt linuxtemp Music Pictures Practise Public snap sym.png temp1 temp2 Templates temporary Training Videos
itsacheckmate@itscheckmate:~$ echo -e "Its \va \vcheckmate"
Its 
    a 
      checkmate



-----------------------------

Name -       man
Purpose-    used to display the user manual of any command it is the detailed view of the command
Examples- $man [OPTION]... [COMMAND NAME]..
Every manual is divided into the following sections:

Executable programs or shell commands
System calls (functions provided by the kernel)
Library calls (functions within program libraries
Games
Special files (usually found in /dev)
File formats and conventions eg /etc/passwd
Miscellaneous (including macro packages and conventions), e.g. groff(7)
System administration commands (usually only for root)
Kernel routines [Non standard]
#man printf
#man 2 printf --> used to the 2nd section of the manual
-f option -> it gives the section in which the gives command is present
man -f ls
itsacheckmate@itscheckmate:~$ man -f rm
rm (1)               - remove files or directories

itsacheckmate@itsacheckmate:~$ 

-a option -> diplay all available into manula pages in succession
man -a ls
itsacheckmate@itsacheckmate:~$ man -a mkdir
--Man-- next: mkdir(2) [ view (return) | skip (Ctrl-D) | quit (Ctrl-C) ]

shows the man in 2 times as 2 manual
-k option -> this option searches all the occurence of the searched command in the manual and returns the section no. where it is found
itsacheckmate@itsacheckmate:~$ man -k mkdir
gvfs-mkdir (1)       - (unknown subject)
mkdir (1)            - make directories
mkdir (2)            - create a directory
mkdirat (2)          - create a directory

-w option -> this returns the loaction oin which the manual page of a given command  is present 
itsacheckmate@itsacheckmate:~$ man -w mkdir
/usr/share/man/man1/mkdir.1.gz
itsacheckmate@itsacheckmate:~$ man -w ls
/usr/share/man/man1/ls.1.gz

-I option -> command in case sensitive 

---------------------------------------------------
Name -       kill
Purpose-   is a built-in command which is used to terminate processes manually. 
kill command sends a signal to a process which terminates the process 
Examples-
Options: 

kill -l :To display all the available signals you can use below command option:
kill pid : To show how to use a PID with the kill command.
kill -s : To show how to send signal to processes.
kill -L :This command is used to list available signals in a table format.
itsacheckmate@itsacheckmate:~/Training$ kill -L
 1) SIGHUP	 2) SIGINT	 3) SIGQUIT	 4) SIGILL	 5) SIGTRAP
 6) SIGABRT	 7) SIGBUS	 8) SIGFPE	 9) SIGKILL	10) SIGUSR1
11) SIGSEGV	12) SIGUSR2	13) SIGPIPE	14) SIGALRM	15) SIGTERM
16) SIGSTKFLT	17) SIGCHLD	18) SIGCONT	19) SIGSTOP	20) SIGTSTP
21) SIGTTIN	22) SIGTTOU	23) SIGURG	24) SIGXCPU	25) SIGXFSZ
26) SIGVTALRM	27) SIGPROF	28) SIGWINCH	29) SIGIO	30) SIGPWR
31) SIGSYS	34) SIGRTMIN	35) SIGRTMIN+1	36) SIGRTMIN+2	37) SIGRTMIN+3
38) SIGRTMIN+4	39) SIGRTMIN+5	40) SIGRTMIN+6	41) SIGRTMIN+7	42) SIGRTMIN+8
43) SIGRTMIN+9	44) SIGRTMIN+10	45) SIGRTMIN+11	46) SIGRTMIN+12	47) SIGRTMIN+13
48) SIGRTMIN+14	49) SIGRTMIN+15	50) SIGRTMAX-14	51) SIGRTMAX-13	52) SIGRTMAX-12
53) SIGRTMAX-11	54) SIGRTMAX-10	55) SIGRTMAX-9	56) SIGRTMAX-8	57) SIGRTMAX-7
58) SIGRTMAX-6	59) SIGRTMAX-5	60) SIGRTMAX-4	61) SIGRTMAX-3	62) SIGRTMAX-2
63) SIGRTMAX-1	64) SIGRTMAX	

-----------------------------------------------------

Name -       ping (Packet Internet Groper)
Purpose-    Used to check the network connectivity between host and server/host
Examples- it takes the input as ip or url and record the time to get response i.e latency
It uses ICMP (Internet control message Protocol)
it send icmp echo message to the host and wait for the icmp reply message
it is measured in milli seconds

itsacheckmate@itscheckmate:~/Practise$ ping www.youtube.com
PING youtube-ui.l.google.com (142.250.195.174) 56(84) bytes of data.
64 bytes from maa03s41-in-f14.1e100.net (142.250.195.174): icmp_seq=1 ttl=117 time=41.1 ms
64 bytes from maa03s41-in-f14.1e100.net (142.250.195.174): icmp_seq=2 ttl=117 time=41.6 ms
64 bytes from maa03s41-in-f14.1e100.net (142.250.195.174): icmp_seq=3 ttl=117 time=40.9 ms
64 bytes from maa03s41-in-f14.1e100.net (142.250.195.174): icmp_seq=4 ttl=117 time=40.4 ms
^C
--- youtube-ui.l.google.com ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3005ms
rtt min/avg/max/mdev = 40.360/40.987/41.628/0.452 ms

Here =>
min: minimum time to get a response
avg: average time to get responses
max: maximum time to get a response

controlling the no of pings
ping -c 5 www.youtube.com will only ping website 5 times

controlling packet size  => -s option
ping -s 40 -c -5 www.google.com
usually it is 64 by default
itsacheckmate@itscheckmate:~/Practise$ ping -s 40 -c 5 www.youtube.com
PING youtube-ui.l.google.com (142.250.183.238) 40(68) bytes of data.
48 bytes from maa05s23-in-f14.1e100.net (142.250.183.238): icmp_seq=1 ttl=59 time=43.6 ms
48 bytes from maa05s23-in-f14.1e100.net (142.250.183.238): icmp_seq=2 ttl=59 time=44.3 ms
48 bytes from maa05s23-in-f14.1e100.net (142.250.183.238): icmp_seq=3 ttl=59 time=47.0 ms
48 bytes from maa05s23-in-f14.1e100.net (142.250.183.238): icmp_seq=4 ttl=59 time=42.0 ms
48 bytes from maa05s23-in-f14.1e100.net (142.250.183.238): icmp_seq=5 ttl=59 time=45.4 ms

--- youtube-ui.l.google.com ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4005ms
rtt min/avg/max/mdev = 41.956/44.440/47.000/1.697 ms

changing time interval between pings=> -i option
by default it is 1 second
ping -i 10 www.youtube.com   # now 10 seconds


to only get summary => -q option is used 
itsacheckmate@itscheckmate:~/Practise$ ping -c 5 -q www.youtube.com
PING youtube-ui.l.google.com (142.250.183.78) 56(84) bytes of data.

--- youtube-ui.l.google.com ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4007ms
rtt min/avg/max/mdev = 38.761/42.588/51.110/4.521 ms

timout ping to stop lingin after certain no. of timeout => -w option is used
ping -w 3 www.youtube.com

to test the network robustness flodding the ping is used => -f option
ping -f www.youtube.com


To Add Timestamp 
It is current time of event recorded by a machine over a network. It works by using TS option of IP packet. 
We have three option with it 
tsonly (timestamp only)
tsandaddr (timestamp and address)
tsprespec (timestamp pre-specified for multiple hosts)
 ping -T tsonly -c 2 127.0.0.1
 ping -T tsandaddr -c 2 127.0.0.1
 
 Time to wait for response: Sets time to wait for a response. 
 ping -c 5 -W 3 www.geeksforgeeks.org
 here -W is in caps 

To fill packet with data: We can fill data in packet using -p option. Like -p ff will fill packet with ones. 
 ping -c 5 -p ff www.geeksforgeeks.org
 PATTERN: 0xff
 Specify TTL(Time To Live): 
It is maximum hop a packet can travel before getting discarded.A value 0 will restricty packet to same host. 
 ping -c 5 -t 64 www.geeksforgeeks.org
 itsacheckmate@itsacheckmate:~$ ping -c 5 -t 2  www.google.com
PING www.google.com (142.250.182.228) 56(84) bytes of data.
From 192.168.1.1 (192.168.1.1) icmp_seq=1 Time to live exceeded


--------------------------------------------------

Name -       top
Purpose-    it is used to show the Linux process. it shows the dynamic real time running view of the system
Examples- top shows table with the follwing columns
PID: Shows task’s unique process id.
PR: The process’s priority. The lower the number, the higher the priority.
VIRT: Total virtual memory used by the task.
USER: User name of owner of task.
%CPU: Represents the CPU usage.
TIME+: CPU Time, the same as ‘TIME’, but reflecting more granularity through hundredths of a second.
SHR: Represents the Shared Memory size (kb) used by a task.
NI: Represents a Nice Value of task. A Negative nice value implies higher priority, and positive Nice value means lower priority.
%MEM: Shows the Memory usage of task.
RES: How much physical RAM the process is using, measured in kilobytes.
COMMAND: The name of the command that started the process.
1. top command after  sepecific no of repetition and top will show the refreshed info so this will exit the top 
top -n 10 => this will exit after 10 no of repeition 
2. Display specific user process
top -u ajay
3. highlight running process on top - press z option in top console
4. Show absolute path of the process - press c option 
5. kill running process - press k option in top console
6. Sort by cpu utilisation - press shift+p 
7 shoes the top command syntax -
top-h  => help
8. Batch Mode- send output from top to fil or any other program 
top -b
9. use top in secure mode 
top -s
10. start top with last closed state
Top -c
11. Delay time - it tellls the delay time between screen updates
Top -d seconds.tenths
top - 13:34:41 up  1:24,  1 user,  load average: 0.35, 0.26, 0.32
Tasks: 324 total,   1 running, 322 sleeping,   1 stopped,   0 zombie
%Cpu(s):  0.6 us,  0.5 sy,  0.0 ni, 98.9 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :  15772.3 total,   9254.0 free,   2509.3 used,   4009.1 buff/cache
MiB Swap:   2048.0 total,   2048.0 free,      0.0 used.  12334.8 avail Mem 

    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND  
   1570 itsache+  20   0  542500 103320  67200 S   2.3   0.6   2:10.13 Xorg     
   1704 itsache+  20   0 4813980 273176 108380 S   2.3   1.7   1:57.38 gnome-s+ 
   3863 itsache+  20   0  971052  55400  41828 S   1.7   0.3   0:19.76 gnome-t+ 
   6015 itsache+  20   0   19356  12076   1660 S   1.3   0.1   0:22.83 wineser+ 
   6069 itsache+  20   0 2021688  74252  37240 S   1.3   0.5   0:34.48 notepad+ 
   2562 itsache+  20   0   16.5g 353792 157780 S   0.7   2.2   1:37.49 chrome   
     13 root      20   0       0      0      0 I   0.3   0.0   0:06.97 rcu_sch+ 
     74 root      20   0       0      0      0 I   0.3   0.0   0:04.20 kworker+ 
    544 root      20   0       0      0      0 S   0.3   0.0   0:22.09 napi/ph+ 
   1730 itsache+  20   0  315076  10724   8720 S   0.3   0.1   0:15.54 ibus-da+ 
   1737 itsache+  20   0  196024  25896  19528 S   0.3   0.2   0:05.22 ibus-x11 
   2608 itsache+  20   0   16.3g 109556  82860 S   0.3   0.7   0:27.84 chrome   
   6039 itsache+  20   0 2218708  24120  10840 S   0.3   0.1   0:16.47 winedev+ 
   6203 itsache+  20   0 1112.5g 228692 105008 S   0.3   1.4   0:57.47 chrome   
  16828 root      20   0       0      0      0 I   0.3   0.0   0:00.02 kworker+ 
      1 root      20   0  169116  13044   8296 S   0.0   0.1   0:01.07 systemd  
      2 root      20   0       0      0      0 S   0.0   0.0   0:00.00 kthreadd
      
 -----------------------------------------------------------
grep - 

---------------------------------------------------------------------------------------------
Name -       find
Purpose-    Used to find files and directories and perform subsequent operations on them
Examples-  
find [where to start searching from ] [-options] [what to find]
Options :

-exec CMD: The file being searched which meets the above criteria and returns 0 for as its exit status for successful command execution.
-ok CMD : It works same as -exec except the user is prompted first.
-inum N : Search for files with inode number ‘N’.
-links N : Search for files with ‘N’ links.
-name demo : Search for files that are specified by ‘demo’.
-newer file : Search for files that were modified/created after ‘file’.
-perm octal : Search for the file if permission is ‘octal’.
-print : Display the path name of the files found by using the rest of the criteria.
-empty : Search for empty files and directories.
-size +N/-N : Search for files of ‘N’ blocks; ‘N’ followed by ‘c’can be used to measure size in characters; ‘+N’ means size > ‘N’ blocks and ‘-N’ means size < 'N' blocks.
-user name : Search for files owned by user name or ID ‘name’.
\(expr \) : True if ‘expr’ is true; used for grouping criteria combined with OR or AND.
! expr : True if ‘expr’ is false.
find . -name *txt

-iname =files irrespective of upper and lower case
-newer file: search for file that are created after the 'file'
-user name :search for the file owned by user name 
-perm permission : search for the file with permission specified.
itsacheckmate@itsacheckmate:~$ touch file.txt file1.txt file.php img.jpg
itsacheckmate@itsacheckmate:~$ find . -name file.txt
./file.txt
itsacheckmate@itsacheckmate:~$ find . -name file10.txt
itsacheckmate@itsacheckmate:~$ find . -iname FILE.txt
./file.txt
itsacheckmate@itsacheckmate:~$ find ./Training -newer index.html
./Training
./Training/.git
./Training/.git/logs/HEAD
./Training/.git/logs/refs/heads/main
./Training/.git/logs/refs/remotes/origin/main
./Training/.git/index
itsacheckmate@itsacheckmate:~$ find . -user root
./tmp/git-2.35.3/gitweb/static/gitweb.js
./tmp/git-2.35.3/gitweb/GITWEB-BUILD-OPTIONS
./tmp/git-2.35.3/gitweb/gitweb.cgi

itsacheckmate@itsacheckmate:~$ find ./Training  -perm 664
./Training/.git/logs/HEAD
./Training/.git/logs/refs/heads/main
./Training/.git/logs/refs/remotes/origin/main
./Training/.git/logs/refs/remotes/origin/HEAD
./Training/.git/packed-refs

itsacheckmate@itsacheckmate:~$ find . -size +50M
./Downloads/google-chrome-stable_current_amd64.deb
./Downloads/Telegram Desktop/Ghosts.2021.S01E17.YouthTrendx.mkv
./d.zip


---------------------------------

Name -       sudo(Super User Do)
Purpose-    Used as a prefix of some command that only superuser are allowed to run
These users who can use the sudo command need to have an entry in the 
sudoers file located at “/etc/sudoers”

------------------------------------------------------------
Wget is the non-interactive network downloader which is used to download files from the server even when the user has not logged on to the system and it can work in the background without hindering the current process. 
 
Syntax - wget [option] [URL]
 
 

----------------------------------------------------------------


Name -       zip/unzip
Purpose-   it is a compression and file packaging utility for Unix
Examples-
Syntax = zip [options] zipfile files_list
$zip myfile.zip filename.txt
itsacheckmate@itsacheckmate:~$ zip my.zip url.txt
  adding: url.txt (deflated 9%)
  
  to unzip use command=>  unzip filename 
  itsacheckmate@itsacheckmate:~$ unzip my.zip
Archive:  my.zip
replace url.txt? [y]es, [n]o, [A]ll, [N]one, [r]ename: n

if to remove file from zipp then use -d command
$zip –d filename.zip file.txt
 to update or add the file in the existing zip use -u option
 zip -u my.zip url.txt
itsacheckmate@itsacheckmate:~$ zip -u my.zip url.txt
itsacheckmate@itsacheckmate:~$ zip -u my.zip newfile
  adding: newfile (stored 0%)
  
  if to remove file after zipping it use -m option 
  zip -m my.zip url.txt
  
  to zip the whole directory use recursive option -r  
  zip -r my.zip Training
  
  
  -x is used to exclude the files while zipping the current directory
  zip –x filename.zip file_to_be_excluded
  
  -v is the verbose to print all the status are the command is run


---------------------------------------------------------------

Nano editor

1.To install the nano editor
$sudo apt update

2.To create and open a new file
$nano new_filename

3.To save a file use ctrl+0

4. To cut paste in a file. Ctrl+o is used to cut and Ctrl+u is used to paste the text.

    To cut and paste a whole line. Move to the line which you want to cut then press Ctrl+k. Now the line is moved to clipboard, To paste it, go to the position where you want to paste and then press Ctrl+u
    
5.To search a word in a file. Ctrl+w is used.

6.To do spell check first press Ctrl+t
Now it will ask you to replace the incorrect words
Enter the word to replace with there

-------------------------------------------------------------

Vim is an advanced and highly configurable text editor built to enable efficient text editing. 
Examples-
type  ':' to give commmand in the vim editor 
:help --for help
:q - to quit
:wq -- to save and exit
:q! - to not save and exit
i = write into file 
x key to delete the word
w - until the start of the next word, EXCLUDING its first character.
e - to the end of the current word, INCLUDING the last character.
$ - to the end of the line, INCLUDING the last character.
 i    ->   This key is used to put the cursor before the current position.
 a    ->   This key is used to put the cursor after the current position.
 o    ->   This key is used to put the cursor below the line.
 O    ->   This key is used to puts the cursor above the line.
 To move courser 2 words forward use the following command
2w
dw to delete the word
d2w to delete 2 words
d$ to delete the line 
u to undo
 and ctrl+r to redo
 r to replace the character
 change operator - ce to change the word
 c$ to change the line
 

To replace the word in file use s/ command in vim like
:s/searchword/replaceword/

To do replace all occurrence of word use g 
:s/searchword/replaceword/g

To confirm before replacements of words use gc
:s/searchword/replaceword/gc

To use this command in the whole file use % before the command
:%s/searchword/replaceword/gc

--------------------------------

